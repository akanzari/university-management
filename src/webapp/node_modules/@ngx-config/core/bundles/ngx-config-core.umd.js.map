{"version":3,"file":"ngx-config-core.umd.js","sources":["ng://@ngx-config/core/config.loader.ts","ng://@ngx-config/core/config.service.ts","ng://@ngx-config/core/config.pipe.ts","ng://@ngx-config/core/config.module.ts"],"sourcesContent":["export abstract class ConfigLoader {\n  abstract loadSettings(): any;\n}\n\nexport class ConfigStaticLoader implements ConfigLoader {\n  constructor(private readonly providedSettings?: any) {\n  }\n\n  loadSettings(): any {\n    return Promise.resolve(this.providedSettings);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ConfigLoader } from './config.loader';\n\n@Injectable()\nexport class ConfigService {\n  protected settings: any;\n\n  constructor(readonly loader: ConfigLoader) {}\n\n  init(): any {\n    return this.loader.loadSettings().then((res: any) => (this.settings = res));\n  }\n\n  getSettings<T = any>(key?: string | Array<string>, defaultValue?: any): T {\n    if (!key || (Array.isArray(key) && !key[0])) {\n      return this.settings;\n    }\n\n    const paths = !Array.isArray(key) ? key.split('.') : key;\n\n    let result = paths.reduce((acc: any, current: string) => acc && acc[current], this.settings);\n\n    if (result === undefined) {\n      result = defaultValue;\n\n      if (result === undefined) {\n        throw new Error(`No setting found with the specified key [${paths.join('/')}]!`);\n      }\n    }\n\n    return result;\n  }\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\n\nimport { ConfigService } from './config.service';\n\n@Injectable()\n@Pipe({\n  name: 'config'\n})\nexport class ConfigPipe implements PipeTransform {\n  constructor(private readonly config: ConfigService) {}\n\n  transform(value: string | Array<string>): any {\n    return this.config.getSettings(value);\n  }\n}\n","import { APP_INITIALIZER, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { ConfigLoader, ConfigStaticLoader } from './config.loader';\nimport { ConfigPipe } from './config.pipe';\nimport { ConfigService } from './config.service';\n\nexport const configFactory = () => new ConfigStaticLoader();\n\nexport const initializerFactory = (config: ConfigService) => {\n  // workaround for AoT compilation\n  const res = () => config.init();\n\n  return res;\n};\n\nexport const CONFIG_FORROOT_GUARD = new InjectionToken('CONFIG_FORROOT_GUARD');\n\n// tslint:disable-next-line:only-arrow-functions\nexport function provideForRootGuard(config?: ConfigService): any {\n  if (config) {\n    throw new Error(`ConfigModule.forRoot() called twice. Lazy loaded modules should use ConfigModule.forChild() instead.`);\n  }\n\n  return 'guarded';\n}\n\n@NgModule({\n  declarations: [ConfigPipe],\n  exports: [ConfigPipe]\n})\nexport class ConfigModule {\n  static forRoot(\n    configuredProvider: any = {\n      provide: ConfigLoader,\n      useFactory: configFactory\n    }\n  ): ModuleWithProviders<ConfigModule> {\n    return {\n      ngModule: ConfigModule,\n      providers: [\n        configuredProvider,\n        ConfigService,\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initializerFactory,\n          deps: [ConfigService],\n          multi: true\n        },\n        {\n          provide: CONFIG_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[ConfigService, new Optional(), new SkipSelf()]]\n        }\n      ]\n    };\n  }\n\n  static forChild(): ModuleWithProviders<ConfigModule> {\n    return {\n      ngModule: ConfigModule\n    };\n  }\n\n  // tslint:disable-next-line:no-empty\n  constructor(@Optional() @Inject(CONFIG_FORROOT_GUARD) guard: any) {}\n}\n"],"names":["Injectable","Pipe","InjectionToken","APP_INITIALIZER","Optional","SkipSelf","NgModule","Inject"],"mappings":";;;;;;;QAAA;SAEC;QAAD,mBAAC;IAAD,CAAC,IAAA;;QAGC,4BAA6B,gBAAsB;YAAtB,qBAAgB,GAAhB,gBAAgB,CAAM;SAClD;QAED,yCAAY,GAAZ;YACE,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC/C;QACH,yBAAC;IAAD,CAAC;;;QCHC,uBAAqB,MAAoB;YAApB,WAAM,GAAN,MAAM,CAAc;SAAI;QAE7C,4BAAI,GAAJ;YAAA,iBAEC;YADC,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,GAAQ,IAAK,QAAC,KAAI,CAAC,QAAQ,GAAG,GAAG,IAAC,CAAC,CAAC;SAC7E;QAED,mCAAW,GAAX,UAAqB,GAA4B,EAAE,YAAkB;YACnE,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC3C,OAAO,IAAI,CAAC,QAAQ,CAAC;aACtB;YAED,IAAM,KAAK,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;YAEzD,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,UAAC,GAAQ,EAAE,OAAe,IAAK,OAAA,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,GAAA,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE7F,IAAI,MAAM,KAAK,SAAS,EAAE;gBACxB,MAAM,GAAG,YAAY,CAAC;gBAEtB,IAAI,MAAM,KAAK,SAAS,EAAE;oBACxB,MAAM,IAAI,KAAK,CAAC,8CAA4C,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAI,CAAC,CAAC;iBAClF;aACF;YAED,OAAO,MAAM,CAAC;SACf;kFA3BU,aAAa;+DAAb,aAAa,WAAb,aAAa;4BAL1B;KAIA,IA6BC;0CA5BY,aAAa;kBADzBA,eAAU;;;;QCKT,oBAA6B,MAAqB;YAArB,WAAM,GAAN,MAAM,CAAe;SAAI;QAEtD,8BAAS,GAAT,UAAU,KAA6B;YACrC,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACvC;4EALU,UAAU;qEAAV,UAAU;4DAAV,UAAU,WAAV,UAAU;yBARvB;KAIA,IAUC;0CANY,UAAU;kBAJtBA,eAAU;;kBACVC,SAAI;mBAAC;oBACJ,IAAI,EAAE,QAAQ;iBACf;;;QCDY,aAAa,GAAG,cAAM,OAAA,IAAI,kBAAkB,EAAE,IAAC;QAE/C,kBAAkB,GAAG,UAAC,MAAqB;QAEtD,IAAM,GAAG,GAAG,cAAM,OAAA,MAAM,CAAC,IAAI,EAAE,GAAA,CAAC;QAEhC,OAAO,GAAG,CAAC;IACb,EAAE;QAEW,oBAAoB,GAAG,IAAIC,mBAAc,CAAC,sBAAsB,EAAE;aAG/D,mBAAmB,CAAC,MAAsB;QACxD,IAAI,MAAM,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,sGAAsG,CAAC,CAAC;SACzH;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;;QAwCC,sBAAsD,KAAU;SAAI;QAjC7D,oBAAO,GAAd,UACE,kBAGC;YAHD,mCAAA,EAAA;gBACE,OAAO,EAAE,YAAY;gBACrB,UAAU,EAAE,aAAa;aAC1B;YAED,OAAO;gBACL,QAAQ,EAAE,YAAY;gBACtB,SAAS,EAAE;oBACT,kBAAkB;oBAClB,aAAa;oBACb;wBACE,OAAO,EAAEC,oBAAe;wBACxB,UAAU,EAAE,kBAAkB;wBAC9B,IAAI,EAAE,CAAC,aAAa,CAAC;wBACrB,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,oBAAoB;wBAC7B,UAAU,EAAE,mBAAmB;wBAC/B,IAAI,EAAE,CAAC,CAAC,aAAa,EAAE,IAAIC,aAAQ,EAAE,EAAE,IAAIC,aAAQ,EAAE,CAAC,CAAC;qBACxD;iBACF;aACF,CAAC;SACH;QAEM,qBAAQ,GAAf;YACE,OAAO;gBACL,QAAQ,EAAE,YAAY;aACvB,CAAC;SACH;0DA/BU,YAAY;iHAAZ,YAAY,gBAkCS,oBAAoB;2BAhEtD;KA0BA,IAuCC;8FAnCY,YAAY,mBAHR,UAAU,aACf,UAAU;0CAET,YAAY;kBAJxBC,aAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,UAAU,CAAC;oBAC1B,OAAO,EAAE,CAAC,UAAU,CAAC;iBACtB;;0BAmCcF,aAAQ;;0BAAIG,WAAM;2BAAC,oBAAoB;;;;;;;;;;;;;;;;;;;;;"}