import { Injectable } from '@angular/core';
import { ConfigLoader } from './config.loader';
import * as i0 from "@angular/core";
import * as i1 from "./config.loader";
var ConfigService = (function () {
    function ConfigService(loader) {
        this.loader = loader;
    }
    ConfigService.prototype.init = function () {
        var _this = this;
        return this.loader.loadSettings().then(function (res) { return (_this.settings = res); });
    };
    ConfigService.prototype.getSettings = function (key, defaultValue) {
        if (!key || (Array.isArray(key) && !key[0])) {
            return this.settings;
        }
        var paths = !Array.isArray(key) ? key.split('.') : key;
        var result = paths.reduce(function (acc, current) { return acc && acc[current]; }, this.settings);
        if (result === undefined) {
            result = defaultValue;
            if (result === undefined) {
                throw new Error("No setting found with the specified key [" + paths.join('/') + "]!");
            }
        }
        return result;
    };
    ConfigService.ɵfac = function ConfigService_Factory(t) { return new (t || ConfigService)(i0.ɵɵinject(i1.ConfigLoader)); };
    ConfigService.ɵprov = i0.ɵɵdefineInjectable({ token: ConfigService, factory: ConfigService.ɵfac });
    return ConfigService;
}());
export { ConfigService };
(function () { i0.ɵsetClassMetadata(ConfigService, [{
        type: Injectable
    }], function () { return [{ type: i1.ConfigLoader }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWNvbmZpZy9jb3JlLyIsInNvdXJjZXMiOlsiY29uZmlnLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7OztBQUUvQztJQUlFLHVCQUFxQixNQUFvQjtRQUFwQixXQUFNLEdBQU4sTUFBTSxDQUFjO0lBQUcsQ0FBQztJQUU3Qyw0QkFBSSxHQUFKO1FBQUEsaUJBRUM7UUFEQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQUMsR0FBUSxJQUFLLE9BQUEsQ0FBQyxLQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxFQUFyQixDQUFxQixDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUVELG1DQUFXLEdBQVgsVUFBcUIsR0FBNEIsRUFBRSxZQUFrQjtRQUNuRSxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQzNDLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztTQUN0QjtRQUVELElBQU0sS0FBSyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO1FBRXpELElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsVUFBQyxHQUFRLEVBQUUsT0FBZSxJQUFLLE9BQUEsR0FBRyxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsRUFBbkIsQ0FBbUIsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFN0YsSUFBSSxNQUFNLEtBQUssU0FBUyxFQUFFO1lBQ3hCLE1BQU0sR0FBRyxZQUFZLENBQUM7WUFFdEIsSUFBSSxNQUFNLEtBQUssU0FBUyxFQUFFO2dCQUN4QixNQUFNLElBQUksS0FBSyxDQUFDLDhDQUE0QyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFJLENBQUMsQ0FBQzthQUNsRjtTQUNGO1FBRUQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs4RUEzQlUsYUFBYTt5REFBYixhQUFhLFdBQWIsYUFBYTt3QkFMMUI7Q0FpQ0MsQUE3QkQsSUE2QkM7U0E1QlksYUFBYTtvQ0FBYixhQUFhO2NBRHpCLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IENvbmZpZ0xvYWRlciB9IGZyb20gJy4vY29uZmlnLmxvYWRlcic7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDb25maWdTZXJ2aWNlIHtcbiAgcHJvdGVjdGVkIHNldHRpbmdzOiBhbnk7XG5cbiAgY29uc3RydWN0b3IocmVhZG9ubHkgbG9hZGVyOiBDb25maWdMb2FkZXIpIHt9XG5cbiAgaW5pdCgpOiBhbnkge1xuICAgIHJldHVybiB0aGlzLmxvYWRlci5sb2FkU2V0dGluZ3MoKS50aGVuKChyZXM6IGFueSkgPT4gKHRoaXMuc2V0dGluZ3MgPSByZXMpKTtcbiAgfVxuXG4gIGdldFNldHRpbmdzPFQgPSBhbnk+KGtleT86IHN0cmluZyB8IEFycmF5PHN0cmluZz4sIGRlZmF1bHRWYWx1ZT86IGFueSk6IFQge1xuICAgIGlmICgha2V5IHx8IChBcnJheS5pc0FycmF5KGtleSkgJiYgIWtleVswXSkpIHtcbiAgICAgIHJldHVybiB0aGlzLnNldHRpbmdzO1xuICAgIH1cblxuICAgIGNvbnN0IHBhdGhzID0gIUFycmF5LmlzQXJyYXkoa2V5KSA/IGtleS5zcGxpdCgnLicpIDoga2V5O1xuXG4gICAgbGV0IHJlc3VsdCA9IHBhdGhzLnJlZHVjZSgoYWNjOiBhbnksIGN1cnJlbnQ6IHN0cmluZykgPT4gYWNjICYmIGFjY1tjdXJyZW50XSwgdGhpcy5zZXR0aW5ncyk7XG5cbiAgICBpZiAocmVzdWx0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJlc3VsdCA9IGRlZmF1bHRWYWx1ZTtcblxuICAgICAgaWYgKHJlc3VsdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gc2V0dGluZyBmb3VuZCB3aXRoIHRoZSBzcGVjaWZpZWQga2V5IFske3BhdGhzLmpvaW4oJy8nKX1dIWApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn1cbiJdfQ==