import { InjectionToken, ModuleWithProviders } from '@angular/core';
import { ConfigStaticLoader } from './config.loader';
import { ConfigService } from './config.service';
import * as i0 from "@angular/core";
import * as i1 from "./config.pipe";
export declare const configFactory: () => ConfigStaticLoader;
export declare const initializerFactory: (config: ConfigService) => () => any;
export declare const CONFIG_FORROOT_GUARD: InjectionToken<unknown>;
export declare function provideForRootGuard(config?: ConfigService): any;
export declare class ConfigModule {
    static forRoot(configuredProvider?: any): ModuleWithProviders<ConfigModule>;
    static forChild(): ModuleWithProviders<ConfigModule>;
    constructor(guard: any);
    static ɵmod: i0.ɵɵNgModuleDefWithMeta<ConfigModule, [typeof i1.ConfigPipe], never, [typeof i1.ConfigPipe]>;
    static ɵinj: i0.ɵɵInjectorDef<ConfigModule>;
}
