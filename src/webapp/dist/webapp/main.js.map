{"version":3,"sources":["./src/app/core/models/exam-type.enum.ts","./src/app/shared/components/cm-table-container/services/pager.service.ts","./src/app/layout/navbar/navbar.component.ts","./src/app/layout/navbar/navbar.component.html","./src/app/core/models/dsex.enum.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/components/cm-table-container/directives/width.directive.ts","./src/app/core/services/exam.service.ts","./src/app/core/services/student-service.ts","./src/app/core/models/response/specific-user-response.model.ts","./src/environments/environment.ts","./src/app/shared/components/cm-table-container/models/config-column.model.ts","./src/app/core/services/teacher-service.ts","./src/app/core/models/request/create-user-request.model.ts","./src/app/shared/components/cm-table-container/date-utils.ts","./src/app/core/models/request/update-room-request.model.ts","./src/app/core/services/token.service.ts","./src/app/core/models/request/update-user-request.model.ts","./src/app/shared/components/cm-table-container/pipes/display.pipe.ts","./src/app/core/models/request/create-teacher-request.model.ts","./src/app/layout/index.ts","./src/app/shared/index.ts","./src/app/shared/components/cm-table-container/pipes/filter.pipe.ts","./src/app/layout/sidebar/sidebar.component.ts","./src/app/layout/sidebar/siderbar.component.html","./src/app/core/services/title.service.ts","./src/app/core/models/request/update-class-request.model.ts","./src/app/core/models/user.model.ts","./src/app/app.routes.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/services/module.service.ts","./src/app/core/models/pole.enum.ts","./src/app/core/services/ref.service.ts","./src/app/shared/components/cm-table-container/components/pagination/pagination.component.ts","./src/app/shared/components/cm-table-container/components/pagination/pagination.component.html","./src/app/settings.ts","./src/app/app.module.ts","./src/app/shared/components/cm-table-container/cm-table-container.component.ts","./src/app/shared/components/cm-table-container/cm-table-container.component.html","./src/app/core/services/iam.service.ts","./src/app/shared/components/cm-checkbox/checkbox.component.ts","./src/app/shared/components/cm-checkbox/checkbox.component.html","./src/app/core/services/index.ts","./src/app/core/models/response/user-response.model.ts","./src/app/core/models/menu.model.ts","./src/app/core/models/period.enum.ts","./src/app/core/index.ts","./src/app/core/services/class.servise.ts","./src/app/core/models/request/update-exam-request.modal.ts","./src/app/layout/footer/footer.component.ts","./src/app/layout/footer/footer.component.html","./src/app/core/models/request/create-student-request.model.ts","./src/app/shared/components/comfirmation-popup/remove/remove-popup.component.ts","./src/app/shared/components/comfirmation-popup/remove/remove-popup.component.html","./src/app/core/models/semester.enum.ts","./src/app/app-init.ts","./src/app/core/models/index.ts","./src/app/core/models/request/create-room-request.model.ts","./src/app/core/services/layout.service.ts","./src/app/core/models/request/create-exam-request.modal.ts","./src/app/core/models/session.enum.ts","./src/app/core/services/room.servise.ts","./src/app/core/models/request/create-class-request.model.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export enum ExamTypeEnum {\n    WRITTEN = \"Écrit\",\n    PRACTICE = \"Pratique\",\n    PRESENTATION = \"Soutenance\"\n}","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PagerService {\r\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number) {\r\n        // calculate total pages\r\n        let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        // ensure current page isn't out of range\r\n        if (currentPage < 1) {\r\n            currentPage = 1;\r\n        } else if (currentPage > totalPages) {\r\n            currentPage = totalPages;\r\n        }\r\n\r\n        let startPage: number, endPage: number;\r\n        if (totalPages <= 5) {\r\n            // less than 5 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 5 total pages so calculate start and end pages\r\n            if (currentPage <= 3) {\r\n                startPage = 1;\r\n                endPage = 5;\r\n            } else if (currentPage + 1 >= totalPages) {\r\n                startPage = totalPages - 4;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 2;\r\n                endPage = currentPage + 2;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        let startIndex = (currentPage - 1) * pageSize;\r\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { LayoutService, RefService, TokenService } from 'src/app/core/services';\r\nimport { Site } from 'src/app/core/models/site.modal';\r\nimport { Observable } from 'rxjs';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\n\r\n@Component({\r\n  selector: 'be-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss'],\r\n  animations: [\r\n    trigger('avatarContent', [\r\n      state('hidden', style({\r\n        height: '0',\r\n        opacity: '0'\r\n      })),\r\n      state('visible', style({\r\n        height: '*', opacity: '1'\r\n      })),\r\n      transition('visible <=> hidden', animate('300ms linear'))\r\n    ])\r\n  ]\r\n})\r\n\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  public isSearchSmDisplay: boolean = false;\r\n  public isNavBarSmDisplay: boolean = false;\r\n  public displayL: Boolean = false;\r\n\r\n  public state: string = 'hidden';\r\n  public site: string = 'Ghazala';\r\n\r\n  public notifs: any[] = [];\r\n  public numberAlerts: any = 0;\r\n\r\n  public sites$: Observable<Site[]>;\r\n\r\n  constructor(private tokenService: TokenService,\r\n    private refService: RefService,\r\n    public ls: LayoutService) { }\r\n\r\n  ngOnInit() {\r\n    this.sites$ = this.refService.getSites();\r\n    //this.tokenService.getProfile().then(res => console.log(res));\r\n  }\r\n\r\n  public toggleSearchModeForSmallScreen(): void {\r\n    this.isSearchSmDisplay = !this.isSearchSmDisplay;\r\n  }\r\n\r\n  public toggleNavBarForSmallScreen(): void {\r\n    this.isNavBarSmDisplay = !this.isNavBarSmDisplay;\r\n  }\r\n\r\n  public logout(): void {\r\n    this.tokenService.logout();\r\n  }\r\n\r\n  public change() {\r\n    this.isNavBarSmDisplay = !this.isNavBarSmDisplay;\r\n  }\r\n\r\n  public changeLang() {\r\n    this.displayL = !this.displayL;\r\n  }\r\n\r\n  public switchSite(site: Site) {\r\n    this.site = site.label;\r\n  }\r\n\r\n  public animateLogo() {\r\n    this.state = (this.state === 'visible' ? 'hidden' : 'visible');\r\n  }\r\n\r\n}","<nav class=\"navbar navbar-expand-lg navbar-top\">\r\n  <a [routerLink]=\"['']\">\r\n    <div class=\"logo logo-default\"></div>\r\n  </a>\r\n\r\n  <div class=\"navbar-collapse collapse\" [ngClass]=\"{ show: isSearchSmDisplay }\">\r\n    <ul class=\"nav navbar-nav\">\r\n      <li class=\"nav-item d-none d-lg-block\">\r\n        <abbr title=\"Annuler mode plein écran\" style=\"text-decoration: blink !important;\">\r\n          <a class=\"nav-link nav-icon open\" (click)=\"ls.toggleSideBarDisplay()\">\r\n            <i *ngIf=\"ls.isSideBarDisplay\" aria-hidden=\"true\" class=\"icons icon-cancel color-text size-20\"></i>\r\n            <i *ngIf=\"!ls.isSideBarDisplay\" aria-hidden=\"true\" class=\"icons icon-hamburger color-text size-20\"></i>\r\n          </a>\r\n        </abbr>\r\n      </li>\r\n      <li class=\"nav-item d-none d-lg-block\">\r\n        <abbr title=\"Plein écran\" style=\"text-decoration: blink !important;\">\r\n          <button type=\"button\" class=\"nav-link {{ ls.isFullScreen ? 'full' : '' }}\" id=\"btn-full\"\r\n            (click)=\"ls.toggleFullScreen()\">\r\n            <i *ngIf=\"!ls.isFullScreen\" class=\"icons icon-expand color-text\"></i>\r\n            <i *ngIf=\"ls.isFullScreen\" class=\"icons icon-contract color-text\"></i>\r\n          </button>\r\n        </abbr>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\" [ngClass]=\"{ show: isNavBarSmDisplay }\">\r\n    <ul class=\"mr-auto\"></ul>\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n\r\n      <!-- <li class=\"nav-item dropdown \" (click)=\"changeLang()\" (click)='animateLogo()'>\r\n        <a class=\"nav-link dropdown-toggle\" id=\"Site\" data-toggle=\"dropdown\">\r\n          <span>{{site}}</span>\r\n        </a>\r\n        <ul class=\"dropdown-menu dropdown-menu-small dropdown-menu-right show\" aria-labelledby=\"dropdownMenu1\"\r\n          [style.display]=\" displayL ? 'block': 'none'\" [@logoState]='state'>\r\n          <li *ngFor=\"let site of (sites$ | async)\">\r\n            <a (click)=\"switchSite(site)\" class=\"dropdown-item \">{{site.label}}</a>\r\n          </li>\r\n        </ul>\r\n      </li> -->\r\n\r\n      <li class=\"nav-item dropdown dropdown-mega\" ngbDropdown\r\n        placement=\"{{ ls.isDesktop() ? 'bottom-right' : 'bottom-left' }}\">\r\n        <a title=\"Profile\" class=\"nav-link dropdown-toggle\" id=\"Support\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n          aria-expanded=\"false\">\r\n          <i aria-hidden=\"true\" class=\"icons icon-user size-20 color-text\"></i>\r\n          <span class=\"d-block d-lg-none libelle-menu\"></span>\r\n        </a>\r\n        <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">\r\n          <li>\r\n\r\n          </li>\r\n        </ul>\r\n      </li>\r\n\r\n      <li class=\"nav-item border-left\">\r\n        <abbr title=\"Déconnexion\" style=\"text-decoration: blink !important;\">\r\n          <a class=\"nav-link\" (click)=\"logout()\">\r\n            <i aria-hidden=\"true\" class=\"icons icon-start color-text size-20\"></i>\r\n            <span class=\"d-block d-lg-none libelle-menu color-text\">Deconnexion</span>\r\n          </a>\r\n        </abbr>\r\n      </li>\r\n\r\n    </ul>\r\n  </div>\r\n</nav>","export enum DsexEnum {\n    DS = \"DS\",\n    EXAM = \"Examen\"\n}","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'home',\n    templateUrl: './home.component.html'\n})\nexport class HomeComponent {\n\n\n    constructor() { }\n\n}","<div class=\"row bg-default-200 sticky sticky-top\">\n    <div class=\"col-12 bg-white pt-5 pb-5 mt-3\">\n        <div class=\"col px-5 pb-5 text-center\">\n            <span class=\"inner\">\n                <i class=\"icons icon-warning size-50\"></i>\n            </span>\n            <h1 class=\"mt-3 color-primary h2\">En cours de construction</h1>\n            <p class=\"font-size-12 pb-2\">Création d'un Dashboard (Monitoring au même temps pilotage) pour la\n                surveillance de données avec une notion forte en temps réel sur lequel l’utilisateur peut interagir</p>\n            <hr />\n            <a class=\"btn btn-link color-text mx-0\" href=\"#\">Passer à la page suivante</a>\n        </div>\n    </div>\n</div>","import { Directive, ElementRef, OnInit, Renderer2, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[columnWidth]'\r\n})\r\nexport class WidthDirective implements OnInit {\r\n\r\n    @Input('columnWidth') columnWidth: string;\r\n    @Input('columnsLength') columnsLength: number;\r\n    @Input('selectionMode') selectionMode!: boolean;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private renderer: Renderer2\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        if (this.columnWidth) {\r\n            this.renderer.setStyle(this.el.nativeElement, 'width', this.columnWidth + '%');\r\n        } else {\r\n            if (!this.selectionMode) {\r\n                this.renderer.setStyle(this.el.nativeElement, 'width', 92 / this.columnsLength + '%');\r\n            } else {\r\n                this.renderer.setStyle(this.el.nativeElement, 'width', 87 / this.columnsLength + '%');\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ConfigService } from '@ngx-config/core';\nimport { CreateExamRequest, Exam, UpdateExamRequest } from '../models';\n\n@Injectable()\nexport class ExamService {\n\n    readonly domain: string;\n\n    constructor(private config: ConfigService,\n        private httpClient: HttpClient) {\n        this.domain = this.config.getSettings('environment.serviceBaseUrl') + \"exam/\";\n    }\n\n    addExam(data: CreateExamRequest): Observable<HttpResponse<Exam>> {\n        return this.httpClient.post<Exam>(this.domain, data, { observe: 'response' });\n    }\n\n    updateExam(data: UpdateExamRequest): Observable<HttpResponse<Exam>> {\n        return this.httpClient.put<Exam>(this.domain, data, { observe: 'response' });\n    }\n\n    deleteExam(id: string) {\n        return this.httpClient.delete<void>(this.domain + id);\n    }\n\n    getExams(): Observable<Exam[]> {\n        return this.httpClient.get<Exam[]>(this.domain);\n    }\n\n    getSingleExam(id: string): Observable<Exam> {\n        return this.httpClient.get<Exam>(this.domain + id);\n    }\n\n}","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';;\nimport { ConfigService } from '@ngx-config/core';\nimport { CreateStudentRequest, Student } from '../models';\n\n@Injectable()\nexport class StudentService {\n\n    readonly domain: string;\n\n    constructor(private config: ConfigService,\n        private httpClient: HttpClient) {\n        this.domain = this.config.getSettings('environment.serviceBaseUrl') + \"student/\";\n    }\n\n    addStudent(data: CreateStudentRequest): Observable<HttpResponse<HttpResponse<Student>>> {\n        return this.httpClient.post<HttpResponse<Student>>(this.domain, data, { observe: 'response' });\n    }\n\n}","export class SpecificUserResponse {\n    public id: string;\n    public fullName: string;\n    public email: string;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { PipeTransform } from '@angular/core';\r\nimport { AbstractControl, ValidationErrors } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { TSMap } from \"typescript-map\";\r\n\r\nexport class ConfigColumn {\r\n\tid: string;\r\n\tvalue?: any[];\r\n\tactions?: Action[];\r\n\tcolumns: Column[];\r\n\tglobalValidaros?: any[];\r\n\tsortableBy?: string;\r\n\tinitForm?: boolean = false;\r\n\taddable?: boolean = false;\r\n\tpagination?: Pagination;\r\n\tnotEditableCondition?: NotEditableCondition; // condition for you cannot modify a specific line\r\n\tselectionMode?: \"multiple\" | \"single\" = \"multiple\";\r\n}\r\n\r\nexport class Pagination {\r\n\tpaginate: boolean = false;\r\n\trowsPerPage?: number; // default = 5\r\n\trowsPerPageOptions?: number[]; // default = [5, 10, 15, 20]\r\n}\r\n\r\nexport class NotEditableCondition {\r\n\tfield: string;\r\n\tvalue: string[];\r\n}\r\n\r\nexport class Action {\r\n\tname: ActionEnum;\r\n\ticon?: Icon;\r\n\tcondition?: ConditionAction;\r\n}\r\n\r\nexport class ConditionAction {\r\n\tmin?: number = 0;\r\n\tmax?: number = 0;\r\n}\r\n\r\nexport class Icon {\r\n\tclass?: string;\r\n\ttooltip?: string;\r\n}\r\n\r\nexport class Column {\r\n\theader: string;\r\n\tfield: string;\r\n\twidth?: string;\r\n\ttype?: \"monoselect\" | \"multiselect\" | \"calendar\" | \"icon\" | \"label\" | \"text\" | \"link\" | \"number\";\r\n\tmonoselectConfig?: SelectConfig;\r\n\tmultiselectConfig?: SelectConfig;\r\n\tplaceholder?: string;\r\n\tpipe?: Pipe;\r\n\tunique?: boolean | string;\r\n\teditable?: boolean = true;\r\n\tevent?: boolean = false; // add event to monoselect\r\n\tdisabled?: boolean = false;\r\n\tfilterable?: boolean = false;\r\n\tsortable?: boolean = false;\r\n\ticon?: string;\r\n\taction?: ActionEnum;\r\n\tdispalyCondition?: any; // à voir\r\n\ticonFunction?: any; // à voir\r\n\ttitleFunction?: any; // à voir\r\n\tvalidations?: Validation;\r\n\tdefaultValue?: DefaultValue | string;\r\n\tvalidationsWithCondition?: ValidationsWithCondition[]; // à voir\r\n\toptionsWithCondition?: OptionsWithCondition[];\r\n\tlink?: Link;\r\n}\r\n\r\nexport class Link {\r\n\ttext?: string;\r\n\turl?: string;\r\n}\r\n\r\nexport class Pipe {\r\n\tfunction: PipeTransform;\r\n\tparams?: any [];\r\n}\r\n\r\nexport class OptionsWithCondition {\r\n\tdependFromColumn: string;\r\n\tvalue: string;\r\n\tvalues: string[];\r\n}\r\n\r\nexport class ValidationsWithCondition {\r\n\tdependFromColumn: string;\r\n\tvalue: string;\r\n\tvalidators: ((control: AbstractControl) => ValidationErrors)[];\r\n\terror: string;\r\n}\r\n\r\nexport class DefaultValue {\r\n\tdependFrom?: string;\r\n\tdependFromColumn?: string;\r\n\tdependFromAPI?: (param: any) => Observable<any>;\r\n\tpathVariable?: string;\r\n\tvalue?: string;\r\n\tformat?: (object: any) => string;\r\n}\r\n\r\nexport class Validation {\r\n\tvalidators: ((control: AbstractControl) => ValidationErrors)[];\r\n\terrors?: TSMap<string, string>;\r\n\terror?: string;\r\n\tcondition?: Condition;\r\n}\r\n\r\nexport class Condition {\r\n\tfield: string;\r\n\tis: string;\r\n}\r\n\r\nexport class SelectConfig {\r\n\ttype: \"objects\" | \"strings\" = \"objects\";\r\n\toptions: any[];\r\n\tbindLabel?: string;\r\n\tbindValue?: string;\r\n}\r\n\r\nexport enum ActionEnum {\r\n\tDISPLAY = \"dispaly\",\r\n\tCREATE = \"create\",\r\n\tUPDATE = \"update\",\r\n\tDELETE = \"delete\",\r\n\tCLONE = \"clone\",\r\n\tDUPLICATE = \"duplicate\",\r\n\tARCHIVE = \"archive\",\r\n\tACTIVATE = \"activate\",\r\n\tDEACTIVATE = \"deactivate\",\r\n\tREATTACH = \"reattach\",\r\n\tDETACH = \"detach\",\r\n\tCOPY = \"copy\",\r\n\tDRAG = \"drag\",\r\n\tALERT = \"alert\",\r\n\tCHECK = \"check\",\r\n\tBASKET = \"basket\",\r\n\tCANCEL = \"cancel\",\r\n\tENTER = \"enter\",\r\n\tDOWNLOAD = \"download\",\r\n\tEXIT = \"exit\",\r\n\tLINK = \"link\",\r\n\tUNLINK = \"unlink\",\r\n\tLOCK = \"lock\",\r\n\tUNLOCK = \"unlock\",\r\n\tSETTING = \"setting\",\r\n\tSHARE = \"share\",\r\n\tUPLOAD = \"upload\",\r\n\tWARNING = \"warning\",\r\n\tINFO = \"info\",\r\n\tGOTO = \"go-to\"\r\n};","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';;\nimport { ConfigService } from '@ngx-config/core';\nimport { CreateTeacherRequest } from '../models';\nimport { Teacher } from '../models/teacher.model';\n\n@Injectable()\nexport class TeacherService {\n\n    readonly domain: string;\n\n    constructor(private config: ConfigService,\n        private httpClient: HttpClient) {\n        this.domain = this.config.getSettings('environment.serviceBaseUrl') + \"teacher/\";\n    }\n\n    addTeacher(data: CreateTeacherRequest): Observable<HttpResponse<HttpResponse<Teacher>>> {\n        return this.httpClient.post<HttpResponse<Teacher>>(this.domain, data, { observe: 'response' });\n    }\n\n    getSingleTeacher(id: string): Observable<Teacher> {\n        return this.httpClient.get<Teacher>(this.domain + id);\n    }\n\n    getTeachers(): Observable<Teacher[]> {\n        return this.httpClient.get<Teacher[]>(this.domain);\n    }\n\n    searchTeachers(data): Observable<Teacher[]> {\n        return this.httpClient.post<Teacher[]>(this.domain + \"search\", data);\n    }\n\n}","export class CreateUserRequest {\n    public firstName: string;\n    public lastname: string;\n    public email: string;\n    public role: string;\n\n    constructor(firstName: string, lastname: string, email: string, role: string) {\n        this.firstName = firstName;\n        this.lastname = lastname;\n        this.email = email;\n        this.role = role;\n    }\n}","import * as moment from 'moment';\r\nimport { AbstractControl, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport namespace Dates {\r\n    export const dateFormats = {\r\n        format1: 'DD/MM/YYYY',\r\n        format2: 'DD-MM-YYYY',\r\n        format3: 'YYYY-MM-DD'\r\n    }\r\n    export function toDate(value: string,\r\n        formats = [\r\n            dateFormats.format1,\r\n            dateFormats.format2,\r\n            dateFormats.format3\r\n        ]\r\n    ): { valid: boolean, date: Date | null } {\r\n        if (!value || !value.toString().trim().length) {\r\n            return { valid: true, date: null };\r\n        }\r\n        let trimmed = value.toString().trim();\r\n        if (!formats.some(format => format.length == trimmed.length)) {\r\n            return { valid: false, date: null };\r\n        }\r\n        let date = moment(value.toString(), formats, true);\r\n        if (!date.isValid()) {\r\n            return { valid: false, date: null };\r\n        }\r\n        return { valid: true, date: date.toDate() };\r\n    }\r\n}\r\n\r\n\r\nexport function dateValidator(validatorField: { [key: string]: boolean }): ValidatorFn {\r\n    return (c: AbstractControl): { [key: string]: boolean } | null => {\r\n        if (!Dates.toDate(c.value).valid) {\r\n            return validatorField;\r\n        }\r\n        return null;\r\n    };\r\n}","export class UpdateRoomRequest {\n    public classRoomId: string;\n    public label: string;\n    public capacity: string;\n    public siteId: string;\n    public blocId: string;\n    public startDate: Date;\n    public endDate: Date;\n    public startHour: number;\n    public endHour: number;\n    public reasonId: string;\n\n    constructor(classRoomId: string, label: string, capacity: string, blocId: string, siteId: string, startDate: string, endDate: string, startHour: string, endHour: string, reasonId: string) {\n        this.classRoomId = classRoomId;\n        this.label = label;\n        this.capacity = capacity;\n        this.blocId = blocId;\n        this.siteId = siteId;\n        this.startDate = startDate ? new Date(startDate) : null;\n        this.endDate = endDate ? new Date(endDate) : null;\n        this.startHour = startHour ? +startHour.replace(':', '') : null;\n        this.endHour = endHour ? +endHour.replace(':', '') : null;\n        this.reasonId = reasonId;\n    }\n}","import { Injectable } from '@angular/core';\nimport { KeycloakService } from 'keycloak-angular';\n\n@Injectable()\nexport class TokenService {\n\n    constructor(private keycloakService: KeycloakService) {\n    }\n\n    logout = async (): Promise<void> => {\n        await this.keycloakService.logout();\n    }\n\n}","export class UpdateUserRequest {\n    public id: string;\n    public email: string;\n    public role: string;\n\n    constructor(id: string, email: string, role: string) {\n        this.id = id;\n        this.email = email;\n        this.role = role;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Pipe({\r\n    name: 'display'\r\n})\r\nexport class DisplayPipe implements PipeTransform {\r\n\r\n    constructor(public datePipe: DatePipe) { }\r\n\r\n    transform(value: any, arg: any): any {\r\n        if (value) {\r\n            let date = new Date(value);\r\n            let nbr = +value;\r\n            if (Object.prototype.toString.call(value) == \"[object Object]\") {\r\n                return value[arg];\r\n            } else if ((typeof value === 'string' || value instanceof String) ) {\r\n                return value as string;\r\n            // } else if (this.isValidDate(date) && Number.isNaN(nbr)) {\r\n            //     return this.datePipe.transform(new Date(value), 'dd/MM/yyyy');\r\n            //\r\n         } else if (typeof value === \"boolean\") {\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n\r\n    // private isValidDate(date: any) {\r\n    //     return date && Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date);\r\n    // }\r\n\r\n}","export class CreateTeacherRequest {\n    public userId: string;\n    public phone: string;\n    public departmentId: string;\n\n    constructor(userId: string, phone: string, departmentId: string) {\n        this.userId = userId;\n        this.phone = phone;\n        this.departmentId = departmentId;\n    }\n}","import { NgModule } from '@angular/core';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SiderbarComponent } from './sidebar/sidebar.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { SharedModule } from '../shared';\r\n\r\nexport const COMPONENTS = [NavbarComponent, SiderbarComponent, FooterComponent];\r\n\r\n@NgModule({\r\n  imports: [SharedModule],\r\n  declarations: COMPONENTS,\r\n  exports: COMPONENTS,\r\n})\r\nexport class LayoutModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ChartsModule } from 'ng2-charts';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { OrderModule } from 'ngx-order-pipe';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DisplayPipe } from './components/cm-table-container/pipes/display.pipe';\nimport { FilterPipe } from './components/cm-table-container/pipes/filter.pipe';\nimport { RemovePopupComponent } from './components/comfirmation-popup/remove/remove-popup.component';\nimport { CmPaginationComponent } from './components/cm-table-container/components/pagination/pagination.component';\nimport { CmTbaleContainerComponent } from './components/cm-table-container/cm-table-container.component';\nimport { WidthDirective } from './components/cm-table-container/directives/width.directive';\nimport { CmCheckBoxContainerComponent } from './components/cm-checkbox/checkbox.component';\n\n@NgModule({\n    declarations: [\n        CmCheckBoxContainerComponent,\n        CmTbaleContainerComponent,\n        CmPaginationComponent,\n        RemovePopupComponent,\n        FilterPipe,\n        DisplayPipe,\n        WidthDirective\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule,\n        TranslateModule,\n        ReactiveFormsModule,\n        OrderModule,\n        NgSelectModule\n    ],\n    exports: [\n        CommonModule,\n        RouterModule,\n        NgbModule,\n        TranslateModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NgbModule,\n        NgSelectModule,\n        NgxSpinnerModule,\n        ChartsModule,\n        CmTbaleContainerComponent,\n        CmCheckBoxContainerComponent\n    ]\n})\nexport class SharedModule { }","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n    transform(items: any[], valueForFilter: any, fieldForFilter: string): any[] {\r\n        if (!items) return [];\r\n        if (!valueForFilter) return items;\r\n        return items.filter(item => {\r\n            let date = new Date(item[fieldForFilter]);\r\n            let nbr = +item[fieldForFilter];\r\n            if (Object.prototype.toString.call(item[fieldForFilter]) == \"[object Object]\") {\r\n                return Object.keys(item[fieldForFilter]).some(key => {\r\n                    return String(item[fieldForFilter][key]).toLowerCase().includes(valueForFilter.toLowerCase());\r\n                });\r\n            } else if (fieldForFilter.includes(\".\")) {\r\n                let array: string[] = fieldForFilter.split('.');\r\n                let str: string = item[array[0]];\r\n                for (let i = 1; i < array.length; i++) {\r\n                    str = str[array[i]];\r\n                }\r\n                return String(str).toLowerCase().includes(valueForFilter.toLowerCase());\r\n            } else if ((typeof item[fieldForFilter] === 'string' || item[fieldForFilter] instanceof String) && !this.isValidDate(date)) {\r\n                return String(item[fieldForFilter]).toLowerCase().includes(valueForFilter.toLowerCase());\r\n            } else if (this.isValidDate(date) && Number.isNaN(nbr)) {\r\n                let datePipe = new DatePipe(\"fr-FR\");\r\n                let result = datePipe.transform(item[fieldForFilter], 'dd/MM/yyyy');\r\n                return String(result).toLowerCase().includes(valueForFilter.toLowerCase());\r\n            }\r\n        });\r\n    }\r\n\r\n    private isValidDate(date: any) {\r\n        return date && Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date);\r\n    }\r\n}\r\n","import { AfterViewInit, Component, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport * as _ from 'lodash';\r\nimport { SideBarMenu, User } from 'src/app/core/models';\r\nimport { LayoutService, TokenService } from 'src/app/core/services';\r\nimport { subMenuItems } from 'src/app/settings';\r\n\r\n@Component({\r\n  selector: 'be-sidebar',\r\n  templateUrl: './siderbar.component.html',\r\n  styles: [`[hidden]:not([broken]) { display: none !important;}`],\r\n  animations: [\r\n    trigger('subMenuContent', [\r\n      state('hidden', style({\r\n        height: '0',\r\n        opacity: '0'\r\n      })),\r\n      state('visible', style({\r\n        height: '*', opacity: '1'\r\n      })),\r\n      transition('visible <=> hidden', animate('300ms linear'))\r\n    ]),\r\n    trigger('subsubMenuContent', [\r\n      state('hidden', style({\r\n        height: '0', opacity: '0'\r\n      })),\r\n      state('visible', style({\r\n        height: '*', opacity: '1'\r\n      })),\r\n      transition('visible <=> hidden', animate('300ms linear'))\r\n    ])\r\n  ]\r\n})\r\nexport class SiderbarComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  @Input()\r\n  public items: SideBarMenu[] = [];\r\n  public currentMenu: string = '0';\r\n  public currentSubMenu: string = null;\r\n  public menuClickAction: boolean = false;\r\n  public routeObservable: Subscription;\r\n  public hidden: boolean = false;\r\n  public currentAccount: User;\r\n\r\n  public subMenus;\r\n\r\n  public reduce = false;\r\n  public template;\r\n  public showSubs = false;\r\n  public displaySub = true;\r\n\r\n  constructor(public ls: LayoutService,\r\n    private renderer: Renderer2) { }\r\n\r\n  public async ngOnInit() {\r\n    this.items = subMenuItems;\r\n    this.currentAccount = null;\r\n  }\r\n\r\n  public selectMenu(menu: string): void {\r\n    this.menuClickAction = true;\r\n    menu !== this.currentMenu ? (this.displaySub = true) : (this.displaySub = !this.displaySub);\r\n    menu !== this.currentMenu ? (this.currentMenu = menu) : (this.currentMenu = this.currentMenu);\r\n    this.currentSubMenu = null;\r\n  }\r\n\r\n  public selectSubMenu(subMenu: any, menu: any): void {\r\n    this.menuClickAction = true;\r\n    if (!this.ls.isSideBarDisplay && !subMenu) {\r\n      this.displaySub = false;\r\n    }\r\n    subMenu.code !== this.currentSubMenu ? (this.currentSubMenu = subMenu.code) : (this.currentSubMenu = null);\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.template = <HTMLElement>document.getElementsByClassName('sidebar')[0];\r\n    this.renderer.listen('body', 'click', () => {\r\n      if (!this.menuClickAction && this.currentMenu && !this.ls.isSideBarDisplay) {\r\n        this.currentMenu = null;\r\n        this.items = subMenuItems;\r\n      }\r\n      this.menuClickAction = false;\r\n    });\r\n    document.addEventListener('reduce', function () { }); \r\n  }\r\n\r\n  public getNavLinkRouteStyle(action): Boolean {\r\n    /*if (this.currentAccount && this.currentAccount.userId === \"psce_user\") {\r\n      if (!this.authzGuardService.isAuthorized(this.currentAccount, action)) {\r\n        this.hidden = true;\r\n      } else {\r\n        this.hidden = false;\r\n      }\r\n    }*/\r\n    return false;\r\n  }\r\n\r\n  search(searchValue: string) {\r\n    this.items = [];\r\n    var el = _.filter(subMenuItems, function (item) {\r\n      return item.defaultLabel.toUpperCase().includes(searchValue.toUpperCase());\r\n    });\r\n    if (el.length != 0) {\r\n      el.forEach((i) => {\r\n        this.items.push(i);\r\n      });\r\n    }\r\n    var el1 = _.filter(subMenuItems[0].subMenus, function (item) {\r\n      return item.defaultLabel.toUpperCase().includes(searchValue.toUpperCase());\r\n    });\r\n    if (el1.length != 0) {\r\n      el1.forEach((i) => {\r\n        let item = new SideBarMenu();\r\n        item.code = i.code;\r\n        item.defaultLabel = i.defaultLabel;\r\n        item.icon = '';\r\n        item.routerLink = [i.routerLink[0]];\r\n        //item.fragment = '';\r\n        this.items.push(item);\r\n      });\r\n    }\r\n    if (searchValue === '') {\r\n      this.items = subMenuItems;\r\n    }\r\n  }\r\n\r\n  public initSearch() {\r\n    if (this.items.length === 0) {\r\n      (<HTMLInputElement>document.getElementById('search')).value = '';\r\n      this.items = subMenuItems;\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.routeObservable) {\r\n      this.routeObservable.unsubscribe();\r\n    }\r\n  }\r\n\r\n}","<nav class=\"sidebar sidebar-nav sidebar-nav-top sidebar-left bg-white\" role=\"navigation\"\r\n  aria-label=\"Nav Primary\">\r\n  <ul>\r\n    <li class=\"sub-menu {{currentMenu && currentMenu === item?.code ? 'opened':''}}\" *ngFor=\"let item of items\">\r\n      <ng-container>\r\n        <a *ngIf=\"item?.subMenus && item?.subMenus?.length > 0\" (click)=\"selectMenu(item?.code); false\"\r\n          [id]=\"item?.code\" [hidden]=\"getNavLinkRouteStyle(item?.appAuthz)\">\r\n          <i aria-hidden=\"true\" class=\"icons icon-{{item?.icon}} size-16\"></i>\r\n          <span>{{item?.defaultLabel | translate}}</span>\r\n        </a>\r\n        <a *ngIf=\"!item?.subMenus\" [routerLink]=\"item?.routerLink\" (click)=\"selectMenu(item?.code); false\"\r\n          [id]=\"item?.code\" [hidden]=\"getNavLinkRouteStyle(item?.appAuthz)\">\r\n          <i aria-hidden=\"true\" class=\"icons icon-{{item?.icon}} size-16\"></i>\r\n          <span>{{item?.defaultLabel | translate}}</span>\r\n        </a>\r\n      </ng-container>\r\n      <!-- SubMenu definition -->\r\n      <ul [@subMenuContent]=\"(currentMenu && currentMenu === item?.code && displaySub) ? 'visible' : 'hidden'\"\r\n        [ngStyle]=\"currentMenu && currentMenu === item?.code ? {'display' : 'block'} : null\">\r\n        <h4>{{item?.defaultLabel | translate}}</h4>\r\n        <li *ngFor=\"let subItem of item?.subMenus\">\r\n          <a *ngIf=\"subItem?.subMenus && subItem?.subMenus.length > 0\" (click)=\"selectSubMenu(subItem, item); true\"\r\n            [id]=\"subItem?.code\">\r\n            <span>{{subItem?.defaultLabel | translate}}</span>\r\n          </a>\r\n          <a *ngIf=\"!subItem?.subMenus\" [routerLink]=\"subItem?.routerLink\"\r\n            [hidden]=\"getNavLinkRouteStyle(subItem?.appAuthz)\" (click)=\"selectSubMenu(subItem, item); false\"\r\n            [id]=\"subItem?.code\">\r\n            <span>{{subItem?.defaultLabel | translate}}</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n</nav>","import { Injectable } from '@angular/core';\n\nimport { Title } from '@angular/platform-browser';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\nconst APP_TITLE = 'Service Provider';\nconst SEPARATOR = ' > ';\n\n@Injectable()\nexport class TitleService {\n    constructor(private router: Router, private activatedRoute: ActivatedRoute, private titleService: Title) { }\n\n    init() {\n        this.router.events\n            .pipe(\n                filter((event) => event instanceof NavigationEnd),\n                map(() => this.activatedRoute),\n                map((route) => {\n                    while (route.firstChild) route = route.firstChild;\n                    return route;\n                }),\n                switchMap((route) => route.data),\n                map((data) => {\n                    if (data.title) {\n                        // If a route has a title set (e.g. data: {title: \"Foo\"}) then we use it\n                        return data.title;\n                    } else {\n                        // If not, we do a little magic on the url to create an approximation\n                        return this.router.url.split('/').reduce((acc, frag) => {\n                            if (acc && frag) {\n                                acc += SEPARATOR;\n                            }\n                            return this.router.url.split('/').reduce((acc, frag) => {\n                                if (acc && frag) {\n                                    acc += SEPARATOR;\n                                }\n                                return acc + TitleService.ucFirst(frag);\n                            });\n                        });\n                    }\n                }),\n            )\n            .subscribe((pathString) => {\n                if (pathString) {\n                    return this.titleService.setTitle(`${pathString}`);\n                }\n                return this.titleService.setTitle(`${APP_TITLE}`);\n            });\n    }\n\n    static ucFirst(string: any) {\n        if (!string) {\n            return string;\n        }\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n}","export class UpdateClassRequest {\n    public classId: string;\n    public label: string;\n    public nbrStudents: string;\n    public nbrGroups: string;\n    public specialityId: string;\n\n    constructor(classId: string, label: string, nbrStudents: string, nbrGroups: string, specialityId: string) {\n        this.classId = classId;\n        this.label = label;\n        this.nbrStudents = nbrStudents;\n        this.nbrGroups = nbrGroups;\n        this.specialityId = specialityId;\n    }\n}","export class User {\n    public id: string;\n    public lastName: string;\n    public firstName: string;\n    public email: string;\n    public roles: string[];\n\n    constructor(id: string, lastName: string, firstName: string, email: string, roles: string[]) {\n        this.id = id;\n        this.lastName = lastName;\n        this.firstName = firstName;\n        this.email = email;\n        this.roles = roles;\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: HomeComponent, data: { title: 'Acceuil' }\n  },\n  {\n    path: 'users', loadChildren: () => import('./pages/users/users.module').then(m => m.UsersModule), data: { title: 'Esprit - Liste des utilisateurs' }\n  },\n  {\n    path: 'students', loadChildren: () => import('./pages/students/students.module').then(m => m.StudentsModule), data: { title: 'Esprit - Liste des etudiants' }\n  },\n  {\n    path: 'teachers', loadChildren: () => import('./pages/teachers/teachers.module').then(m => m.TeachersModule), data: { title: 'Esprit - Liste Enseignants' }\n  },\n  {\n    path: 'classes', loadChildren: () => import('./pages/classes/classes.module').then(m => m.ClassesModule), data: { title: 'Esprit - Liste des classes' }\n  },\n  {\n    path: 'modules', loadChildren: () => import('./pages/modules/modules.module').then(m => m.ModulesModule), data: { title: 'Esprit - Liste des modules' }\n  },\n  {\n    path: 'rooms', loadChildren: () => import('./pages/rooms/rooms.module').then(m => m.RoomsModule), data: { title: 'Esprit - Liste des salles' }\n  },\n  {\n    path: 'exams', loadChildren: () => import('./pages/exams/exams.module').then(m => m.ExamsModule), data: { title: 'Esprit - Liste des epreuves' }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SideBarMenu } from './core/models';\nimport { LayoutService, TitleService } from './core/services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  public hideSidebar: Observable<boolean>;\n  public items: SideBarMenu[] = [];\n\n  constructor(public ls: LayoutService,\n    private titleService: TitleService) {\n    this.titleService.init();\n    this.hideSidebar = this.ls.getSidebarState();\n  }\n\n}","<div id=\"site\" [ngClass]=\"{'sidebar-close': !ls.isSideBarDisplay}\" style=\"overflow: unset;\">\n\n  <be-navbar></be-navbar>\n\n\n  <be-sidebar [items]=\"items\" *ngIf=\"hideSidebar | async\"></be-sidebar>\n\n  <main id=\"page-sidebar-left\" class=\"px-4\" role=\"main\">\n    <div class=\"container-fluid\">\n      <br />\n      <router-outlet></router-outlet>\n    </div>\n  </main>\n</div>","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ConfigService } from '@ngx-config/core';\nimport { Module } from '../models';\nimport { CreateModuleRequest } from '../models/request/create-module-request.model';\n\n@Injectable()\nexport class ModuleService {\n\n    readonly domain: string;\n\n    constructor(private config: ConfigService,\n        private httpClient: HttpClient) {\n        this.domain = this.config.getSettings('environment.serviceBaseUrl') + \"module/\";\n    }\n\n    addModule(data: CreateModuleRequest): Observable<HttpResponse<Module>> {\n        return this.httpClient.post<Module>(this.domain, data, { observe: 'response' });\n    }\n\n    updateModule(data): Observable<HttpResponse<Module>> {\n        return this.httpClient.put<Module>(this.domain, data, { observe: 'response' });\n    }\n\n    deleteModule(id: string) {\n        return this.httpClient.delete<void>(this.domain + id);\n    }\n\n    getModules(): Observable<Module[]> {\n        return this.httpClient.get<Module[]>(this.domain + \"without-classes\");\n    }\n\n    getAssignClassesByModule(moduleId: string): Observable<any> {\n        return this.httpClient.get<any>(this.domain + \"assign-classes/\" + moduleId);\n    }\n\n    getModulesByClass(classId: string): Observable<Module[]> {\n        return this.httpClient.get<Module[]>(this.domain + \"classId/\" + classId);\n    }\n\n    getSingleModule(id: string): Observable<Module> {\n        return this.httpClient.get<Module>(this.domain + id);\n    }\n\n}","export enum PoleEnum {\n    C = \"Charguia\",\n    G = \"El Ghazala\"\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ConfigService } from '@ngx-config/core';\nimport { Speciality } from '../models/speciality.model';\nimport { Site } from '../models/site.modal';\nimport { Department } from '../models';\nimport { map } from 'rxjs/operators';\nimport { DatePipe } from '@angular/common';\n\n@Injectable()\nexport class RefService {\n\n    readonly domain: string;\n\n    readonly domainMigration: string;\n\n    constructor(private config: ConfigService,\n        private datePipe: DatePipe,\n        private httpClient: HttpClient) {\n        this.domain = this.config.getSettings('environment.serviceBaseUrl');\n        this.domainMigration = this.config.getSettings('environment.serviceBaseUrlMigration');\n    }\n\n    getBlocs(): Observable<any[]> {\n        return this.httpClient.get<any[]>(\"./assets/data/bloc.json\");\n    }\n\n    getTypeExam(): Observable<any[]> {\n        return this.httpClient.get<any[]>(\"./assets/data/type-exam.json\");\n    }\n\n    getLevels(): Observable<any[]> {\n        return this.httpClient.get<any[]>(\"./assets/data/level.json\");\n    }\n\n    getSpecialities(): Observable<Speciality[]> {\n        return this.httpClient.get<Speciality[]>(this.domain + \"speciality\");\n    }\n\n    getSites(): Observable<Site[]> {\n        return this.httpClient.get<Site[]>(this.domain + \"site\");\n    }\n\n    getDepartements(): Observable<Department[]> {\n        return this.httpClient.get<Department[]>(this.domain + \"department\");\n    }\n\n    getReasonRooms(): Observable<any[]> {\n        return this.httpClient.get<any[]>(this.domain + \"reason-room\");\n    }\n\n    getDays(): Observable<any> {\n        return this.httpClient.get<any[]>(this.domainMigration + \"days\");\n    }\n\n    getSeances(): Observable<any> {\n        return this.httpClient.get<any[]>(this.domain + \"seance\").pipe(\n            map((seances: any[]) => this.mapSeances(seances)));\n    }\n\n    private mapSeances(seances: any[]): any[] {\n        let result : any[] = [];\n        if (seances) {\n            seances.forEach(seance => {\n                result.push({\n                    seanceId: seance.seanceId,\n                    label: seance.seanceId + \" - \" + seance.startHour + \" à \" + seance.endHour,\n                    startHour: seance.startHour,\n                    endHour: seance.endHour\n                })\n            })\n        }\n        return result;\n    }\n\n    getSemeters(): Observable<any> {\n        return this.httpClient.get<any[]>(this.domain + \"semester\").pipe(\n            map((semesters: any[]) => this.mapSemeters(semesters)));\n    }\n\n    private mapSemeters(semesters: any[]): any[] {\n        let result : any[] = [];\n        if (semesters) {\n            semesters.forEach(semester => {\n                result.push({\n                    semestreId: semester.semestreId,\n                    label: (semester.code == \"1\" ? \"S1\" : \"S2\") + \" - \" + this.datePipe.transform(semester.startDate, \"dd/MM/yyyy\") + \" à \" + this.datePipe.transform(semester.endDate, \"dd/MM/yyyy\"),\n                    code: semester.code,\n                    startDate: semester.startDate,\n                    endDate: semester.endDate,\n                    periods: this.mapPeriods(semester.periods)\n                })\n            })\n        }\n        return result;\n    }\n\n    private mapPeriods(periods: any[]): any[] {\n        let result : any[] = [];\n        if (periods) {\n            periods.forEach(period => {\n                result.push({\n                    periodId: period.periodId ? period.periodId : null,\n                    label: period.code ? (period.code == \"1\" ? \"P1\" : \"P2\") + \" - \" + this.datePipe.transform(period.startDate, \"dd/MM/yyyy\") + \" à \" + this.datePipe.transform(period.endDate, \"dd/MM/yyyy\") : null,\n                    code: period.code ? period.code : null,\n                    startDate: period.startDate ? period.startDate : null,\n                    endDate: period.endDate ? period.endDate : null,\n                    weeks: this.mapWeeks(period.weeks)\n                })\n            })\n        }\n        return result;\n    }\n\n    private mapWeeks(weeks: any[]): any[] {\n        let result : any[] = [];\n        if (weeks) {\n            weeks.forEach(week => {\n                result.push({\n                    weekId: week.weekId ? week.weekId : null,\n                    label: this.datePipe.transform(week.startDate, \"dd/MM/yyyy\") + \" à \" + this.datePipe.transform(week.endDate, \"dd/MM/yyyy\"),\n                    startDate: week.startDate ? week.startDate : null,\n                    endDate: week.endDate ? week.endDate : null\n                })\n            })\n        }\n        return result;\n    }\n\n}","import { Component, Input, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'cm-pagination',\r\n    templateUrl: './pagination.component.html',\r\n    styleUrls: ['./pagination.component.scss']\r\n})\r\nexport class CmPaginationComponent {\r\n\r\n    @Input()\r\n    public pager: any = {};\r\n\r\n    @Input()\r\n    public rowsPerPageOptions?: number[];\r\n\r\n    @Output()\r\n    public updatePager: EventEmitter<any> = new EventEmitter();\r\n\r\n    public setPage(page: number, totalItems?: number) {\r\n        if (totalItems) {\r\n            this.updatePager.emit({ page: page, totalItems: totalItems });\r\n        } else {\r\n            this.updatePager.emit({ page: page, totalItems: this.pager.pageSize });\r\n        }\r\n    }\r\n\r\n}","<div class=\"row mx-0\" *ngIf=\"pager.pages && pager.pages.length\">\r\n    <div class=\"col-3\">\r\n        <input type=\"text\" class=\"text-center mr-2 h-75\" [placeholder]=\"pager?.totalItems\" disabled style=\"    width: 20%;\">\r\n        <span class=\"font-size-12\">éléments</span>\r\n    </div>\r\n    <div class=\"col-6 col-md-4 d-flex justify-content-center pt-2\">\r\n        <ul class=\"pagination pagination-small m-0\">\r\n            <li class=\"page-item previous\" title=\"Première\">\r\n                <a class=\"page-link\" (click)=\"setPage(1)\">\r\n                    <i class=\"pi pi-step-backward size-16 color-primary\"></i>\r\n                </a>\r\n            </li>\r\n\r\n            <li class=\"page-item previous\" title=\"Précédent\">\r\n                <a class=\"page-link\" (click)=\"setPage(pager.currentPage - 1)\">\r\n                    <i class=\"pi pi-caret-left size-16 color-primary\"></i>\r\n                </a>\r\n            </li>\r\n\r\n            <li *ngFor=\"let page of pager.pages\" [ngClass]=\"{active:pager.currentPage === page}\"\r\n                class=\"page-item number px-1\">\r\n                <a class=\"page-link\" (click)=\"setPage(page)\">{{page}}</a>\r\n            </li>\r\n\r\n            <li class=\"page-item next\" title=\"Suivant\">\r\n                <a class=\"page-link\" (click)=\"setPage(pager.currentPage + 1)\">\r\n                    <i class=\"pi pi-caret-right size-16 color-primary\"></i>\r\n                </a>\r\n            </li>\r\n\r\n            <li class=\"page-item next\" title=\"Dernière\">\r\n                <a class=\"page-link\" (click)=\"setPage(pager.totalPages)\">\r\n                    <i class=\"pi pi-step-forward size-16 color-primary\"></i>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"col-3 col-md-5 text-right\">\r\n        <span class=\"font-size-12\">Nombre de résultats par page </span>\r\n        <select class=\"width-50 ml-2 h-75\" (change)=\"setPage(1, $event.target.value)\">\r\n            <option *ngFor=\"let option of rowsPerPageOptions\" [value]=\"option\"\r\n                [attr.selected]=\"option==5 ? true : null\">\r\n                {{option}}\r\n            </option>\r\n        </select>\r\n    </div>\r\n</div>","import { SideBarMenu } from './core/models';\n\nexport const subMenuItems: SideBarMenu[] = [,\n  {\n    code: '0',\n    defaultLabel: 'Accueil',\n    icon: 'bar_chart',\n    routerLink: ['/'],\n    appAuthz: '',\n  },\n  {\n    code: '1',\n    defaultLabel: 'Liste des utilisateurs',\n    icon: 'users',\n    routerLink: ['/users'],\n    appAuthz: '',\n  },\n  {\n    code: '44',\n    defaultLabel: 'Liste des enseignants',\n    icon: 'wifi',\n    routerLink: ['/teachers'],\n    appAuthz: ''\n  },\n  {\n    code: '4',\n    defaultLabel: 'Liste des classes',\n    icon: 'wifi',\n    routerLink: ['/classes'],\n    appAuthz: ''\n  },\n  {\n    code: '5',\n    defaultLabel: 'Liste des modules',\n    icon: 'copy',\n    routerLink: ['/modules'],\n    appAuthz: '',\n  },\n  {\n    code: '6',\n    defaultLabel: 'Liste des salles',\n    icon: 'home',\n    routerLink: ['/rooms'],\n    appAuthz: '',\n  },\n  {\n    code: '7',\n    defaultLabel: 'Liste des epreuves',\n    icon: 'settings',\n    routerLink: ['/exams'],\n    appAuthz: '',\n  },\n  {\n    code: '8',\n    defaultLabel: 'Agenda',\n    icon: 'calendar',\n    routerLink: ['/exams'],\n    appAuthz: '',\n  }\n];","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { APP_INITIALIZER, LOCALE_ID, NgModule } from '@angular/core';\nimport localeFr from '@angular/common/locales/fr';\nimport { AppComponent } from './app.component';\nimport { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { ConfigLoader, ConfigModule } from '@ngx-config/core';\nimport { ConfigHttpLoader } from '@ngx-config/http-loader';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient } from '@angular/common/http';\nimport { initializer } from './app-init';\nimport { CoreModule } from './core';\nimport { LayoutModule } from './layout';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AppRoutingModule } from './app.routes';\nimport { registerLocaleData } from '@angular/common';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\nexport function configFactory(http: HttpClient): ConfigLoader {\n  let infoUrl = window.location.protocol + '//' + window.location.hostname + ':8997/actuator/info';\n  if ((window.location.port == null) || (window.location.port === '')) {\n    infoUrl = window.location.protocol + '//' + window.location.hostname + '/actuator/info';\n  }\n  return new ConfigHttpLoader(http, infoUrl);\n}\n\nregisterLocaleData(localeFr);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    LayoutModule,\n    CoreModule.forRoot(),\n    TranslateModule.forRoot(),\n    KeycloakAngularModule,\n    ConfigModule.forRoot({\n      provide: ConfigLoader,\n      useFactory: configFactory,\n      deps: [HttpClient]\n    }),\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'fr-FR' },\n    {\n      provide: APP_INITIALIZER, useFactory: initializer, multi: true,\n      deps: [KeycloakService, HttpClient]\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, EventEmitter, Output, OnChanges, SimpleChanges, Renderer2, ElementRef, QueryList, ViewChildren } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, AbstractControl, ValidatorFn, FormControl } from \"@angular/forms\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { DisplayPipe } from \"./pipes/display.pipe\";\r\nimport * as moment from 'moment';\r\nimport { TSMap } from 'typescript-map';\r\nimport { ConfigColumn, Column, DefaultValue, ActionEnum, Action, Pipe } from './models/config-column.model';\r\nimport { DataValue } from \"./models/data-value.model\";\r\nimport { PagerService } from \"./services/pager.service\";\r\nimport { Dates } from './date-utils';\r\n\r\n@Component({\r\n    selector: 'cm-table-container',\r\n    templateUrl: './cm-table-container.component.html',\r\n    styleUrls: ['./cm-table-container.component.scss'],\r\n    providers: [DatePipe, DisplayPipe]\r\n})\r\nexport class CmTbaleContainerComponent implements OnChanges {\r\n\r\n    public formGroup: FormGroup;\r\n\r\n    @ViewChildren('sort')\r\n    public spans: QueryList<ElementRef>;\r\n\r\n    @Output()\r\n    public sendData: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output()\r\n    public hideAddButtonChanged: EventEmitter<boolean> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onChangeSelectFromTable: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onChangeCalendarFromTable: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output()\r\n    public selectedRowsChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onRowSelect: EventEmitter<any[]> = new EventEmitter();\r\n\r\n    @Input()\r\n    public config: ConfigColumn;\r\n\r\n    public displayLine: boolean = false;\r\n    public reverse: boolean = false;\r\n    public principalChecked: boolean;\r\n    public editableWithSelectMode: boolean;\r\n\r\n    public getErrorForConditionValidation: string;\r\n    public fieldForFilter: string;\r\n    public valueForFilter: string;\r\n    public fieldForSort: string;\r\n    public dependLabel: string;\r\n    public action: ActionEnum;\r\n\r\n    public currentConfig: ConfigColumn;\r\n    public columns: Column[];\r\n\r\n    public allItems: any[];\r\n    public pagedItems: any[];\r\n    public tableSelectedRows: any[];\r\n    public pager: any = {};\r\n\r\n    public labelMap: TSMap<string, string> = new TSMap<string, string>();\r\n\r\n    public columnsEditable: TSMap<string, boolean> = new TSMap<string, boolean>();\r\n\r\n    public validationError: TSMap<string, string> = new TSMap<string, string>();\r\n\r\n    public editableLigneMap: TSMap<string, boolean> = new TSMap<string, boolean>();\r\n\r\n    public itemsChecked: TSMap<string, boolean> = new TSMap<string, any>();\r\n\r\n    @Input()\r\n    get selectedRows() {\r\n        return this.tableSelectedRows;\r\n    }\r\n\r\n    set selectedRows(rows) {\r\n        this.tableSelectedRows = rows;\r\n        if (this.allItems && this.tableSelectedRows.length === 0) {\r\n            this.principalChecked = false;\r\n            this.allItems.forEach((item, index) => this.itemsChecked.set(this.currentConfig.id + \"-\" + index, null));\r\n        }\r\n        this.selectedRowsChange.emit(rows);\r\n    }\r\n\r\n    constructor(private renderer2: Renderer2,\r\n        private fb: FormBuilder,\r\n        private pagerService: PagerService,\r\n        private datePipe: DatePipe) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes[\"config\"] && changes[\"config\"].currentValue) {\r\n            this.formGroup = this.fb.group({});\r\n            this.currentConfig = changes[\"config\"].currentValue;\r\n            this.columns = this.currentConfig.columns;\r\n            this.allItems = this.currentConfig.value;\r\n\r\n            if (this.allItems) {\r\n                this.allItems.forEach((item, index) => {\r\n                    this.editableLigneMap.set(this.currentConfig.id + \"-\" + index, false);\r\n                    this.itemsChecked.set(this.currentConfig.id + \"-\" + index, null)\r\n                });\r\n            }\r\n\r\n            if (this.currentConfig.hasOwnProperty(\"sortableBy\")) {\r\n                this.fieldForSort = this.currentConfig.sortableBy;\r\n            } else {\r\n                this.fieldForSort = this.currentConfig.columns[0].field;\r\n            }\r\n\r\n            if (this.currentConfig.hasOwnProperty(\"pagination\")) {\r\n                if (!this.currentConfig.pagination.hasOwnProperty(\"rowsPerPage\")) {\r\n                    this.currentConfig.pagination.rowsPerPage = 5;\r\n                }\r\n                if (!this.currentConfig.pagination.hasOwnProperty(\"rowsPerPageOptions\")) {\r\n                    this.currentConfig.pagination.rowsPerPageOptions = [5, 10, 15, 20, 25, 30];\r\n                }\r\n                if (this.pagedItems) {\r\n                    this.setPage({ page: 1, totalItems: this.pager.pageSize });\r\n                } else {\r\n                    this.setPage({ page: 1 });\r\n                }\r\n            }\r\n\r\n            if (this.currentConfig.initForm) {\r\n                this.initForm();\r\n            }\r\n\r\n            if (this.currentConfig.hasOwnProperty(\"addable\")) {\r\n                this.updateUniqueOption();\r\n                this.hideOrDisplayAddButton();\r\n            }\r\n\r\n            if (this.getUpdateAction() && !this.getUpdateAction().icon) {\r\n                this.editableWithSelectMode = true;\r\n            } else {\r\n                this.editableWithSelectMode = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public arrayOfItems() {\r\n        if (this.currentConfig.pagination) {\r\n            return this.pagedItems;\r\n        } else {\r\n            return this.allItems;\r\n        }\r\n    }\r\n\r\n    public notEditableCondition(b: string): boolean {\r\n        if (this.currentConfig.notEditableCondition && b && this.currentConfig.notEditableCondition.value.includes(b)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public addLine(): void {\r\n        if (this.currentConfig && this.currentConfig.hasOwnProperty(\"addable\")) {\r\n            this.action = ActionEnum.CREATE;\r\n            this.displayLine = true;\r\n            this.hideOrDisplayAddButton();\r\n            this.initForm();\r\n        }\r\n    }\r\n\r\n    public initForm(): void {\r\n        if (this.currentConfig && this.currentConfig.globalValidaros) {\r\n            let datesValidaros = this.currentConfig.globalValidaros.find(element => element.hasOwnProperty(\"dateLessThan\"));\r\n            if (datesValidaros) {\r\n                this.formGroup.setValidators(this.dateLessThan(datesValidaros.dateLessThan[0], datesValidaros.dateLessThan[1], { 'loaddate': true }));\r\n            }\r\n        }\r\n        this.columns.forEach(element => {\r\n            if (element.validations && !element.validations.hasOwnProperty(\"condition\") && element.defaultValue && Object.prototype.toString.call(element.defaultValue) != \"[object Object]\") {\r\n                if (this.formGroup.get(element.field)) {\r\n                    this.formGroup.get(element.field).setValue(element.defaultValue);\r\n                    this.formGroup.get(element.field).setValidators(element.validations.validators);\r\n                } else {\r\n                    this.formGroup.addControl(element.field, this.fb.control(element.defaultValue, element.validations.validators));\r\n                }\r\n            } else if (element.validations && !element.validations.hasOwnProperty(\"condition\") && !element.defaultValue) {\r\n                if (this.formGroup.get(element.field)) {\r\n                    this.formGroup.get(element.field).setValue(null);\r\n                    this.formGroup.get(element.field).setValidators(element.validations.validators);\r\n                } else {\r\n                    this.formGroup.addControl(element.field, this.fb.control(null, element.validations.validators));\r\n                }\r\n            } else if (!element.validations && element.defaultValue && Object.prototype.toString.call(element.defaultValue) != \"[object Object]\") {\r\n                if (this.formGroup.get(element.field)) {\r\n                    this.formGroup.get(element.field).setValue(element.defaultValue);\r\n                } else {\r\n                    this.formGroup.addControl(element.field, this.fb.control(null, element.validations.validators));\r\n                }\r\n            } else {\r\n                if (this.formGroup.get(element.field)) {\r\n                    this.formGroup.get(element.field).setValue(null);\r\n                } else {\r\n                    this.formGroup.addControl(element.field, this.fb.control(null));\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    public async onChangeItem(event, field: string) {\r\n        this.setCalendarCondition(field);\r\n\r\n        let columnsWithEvent = this.columns.filter(element => element.field === field && element.event);\r\n        if (columnsWithEvent.length > 0) {\r\n            this.onChangeSelectFromTable.emit({ event: event, field: field, form: this.formGroup });\r\n        }\r\n\r\n        let dependFromColumns = this.columns.filter(element => element.defaultValue && element.defaultValue.hasOwnProperty(\"dependFromColumn\"));\r\n        if (dependFromColumns.length > 0) {\r\n            dependFromColumns.forEach(element => {\r\n                if (field === (element.defaultValue as DefaultValue).dependFromColumn) {\r\n                    if ((element.defaultValue as DefaultValue).value && (element.defaultValue as DefaultValue).value.includes(\".\")) {\r\n                        if ((element.defaultValue as DefaultValue).format) {\r\n                            if (element.type !== \"label\") {\r\n                                this.formGroup.get(element.field).setValue((element.defaultValue as DefaultValue).format(event[(element.defaultValue as DefaultValue).value.split('.')[0]][(element.defaultValue as DefaultValue).value.split('.')[1]]));\r\n                            } else {\r\n                                this.labelMap.set(element.field, (element.defaultValue as DefaultValue).format(event[(element.defaultValue as DefaultValue).value.split('.')[0]][(element.defaultValue as DefaultValue).value.split('.')[1]]));\r\n                            }\r\n                        } else {\r\n                            if (element.type !== \"label\") {\r\n                                this.formGroup.get(element.field).setValue(event[(element.defaultValue as DefaultValue).value.split('.')[0]][(element.defaultValue as DefaultValue).value.split('.')[1]]);\r\n                            } else {\r\n                                this.labelMap.set(element.field, event[(element.defaultValue as DefaultValue).value.split('.')[0]][(element.defaultValue as DefaultValue).value.split('.')[1]]);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if ((element.defaultValue as DefaultValue).format) {\r\n                            if (element.type !== \"label\") {\r\n                                this.formGroup.get(element.field).setValue((element.defaultValue as DefaultValue).format(event[element.field]));\r\n                            } else {\r\n                                this.labelMap.set(element.field, (element.defaultValue as DefaultValue).format(event[element.field]));\r\n                            }\r\n                        } else {\r\n                            if (element.type !== \"label\") {\r\n                                this.formGroup.get(element.field).setValue(event[element.field]);\r\n                            } else {\r\n                                this.labelMap.set(element.field, event[element.field]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        let optionsConditionColumns = this.columns.filter(element => element.hasOwnProperty(\"optionsWithCondition\"));\r\n        if (optionsConditionColumns.length > 0) {\r\n            optionsConditionColumns.forEach(element => {\r\n                if (element.optionsWithCondition[0].dependFromColumn.includes(\".\") && element.optionsWithCondition[0].dependFromColumn.split('.')[0] === field) {\r\n                    let result = element.optionsWithCondition.find(item => event[element.optionsWithCondition[0].dependFromColumn.split('.')[1]] == item.value);\r\n                    element.monoselectConfig.options = result.values;\r\n                    this.formGroup.get(element.field).setValue(null);\r\n                } else if (!element.optionsWithCondition[0].dependFromColumn.includes(\".\") && element.optionsWithCondition[0].dependFromColumn === field) {\r\n                    let result = element.optionsWithCondition.find(item => event[element.optionsWithCondition[0].dependFromColumn] == item.value);\r\n                    this.formGroup.get(element.optionsWithCondition[0].dependFromColumn).setValue(null);\r\n                    element.monoselectConfig.options = result.values;\r\n                    this.formGroup.get(element.field).setValue(null);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (event) {\r\n            let validationsConditionColumns = this.columns.filter(element => element.hasOwnProperty(\"validationsWithCondition\"));\r\n            if (validationsConditionColumns.length > 0) {\r\n                validationsConditionColumns.forEach(element => {\r\n                    if (element.validationsWithCondition[0].dependFromColumn.includes(\".\") && element.validationsWithCondition[0].dependFromColumn.split('.')[0] === field) {\r\n                        let result = element.validationsWithCondition.find(item => event[element.validationsWithCondition[0].dependFromColumn.split('.')[1]] == item.value);\r\n                        this.formGroup.get(element.field).setValidators(result.validators);\r\n                        this.getErrorForConditionValidation = result.error;\r\n                    } else if (!element.validationsWithCondition[0].dependFromColumn.includes(\".\") && element.validationsWithCondition[0].dependFromColumn === field) {\r\n                        let result = element.validationsWithCondition.find(item => event[element.validationsWithCondition[0].dependFromColumn] == item.value);\r\n                        this.formGroup.get(element.field).setValidators(result.validators);\r\n                        this.getErrorForConditionValidation = result.error;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        let dependFromApis = this.columns.filter(element => element.defaultValue && field === (element.defaultValue as DefaultValue).pathVariable && (element.defaultValue as DefaultValue).hasOwnProperty(\"dependFromAPI\"));\r\n        if (dependFromApis.length > 0) {\r\n            for (const element of dependFromApis) {\r\n                if (this.formGroup.get((element.defaultValue as DefaultValue).pathVariable).value) {\r\n                    let item = await (element.defaultValue as DefaultValue).dependFromAPI(this.formGroup.get((element.defaultValue as DefaultValue).pathVariable).value).toPromise();\r\n                    if ((element.defaultValue as DefaultValue).value && (element.defaultValue as DefaultValue).value.includes(\".\")) {\r\n                        if (element.type !== \"label\") {\r\n                            this.formGroup.get(element.field).setValue(item[(element.defaultValue as DefaultValue).value.split('.')[0]][(element.defaultValue as DefaultValue).value.split('.')[1]]);\r\n                            this.formGroup.get(element.field).updateValueAndValidity();\r\n                        } else {\r\n                            this.formGroup.get(element.field).setValue(item[(element.defaultValue as DefaultValue).value.split('.')[0]][(element.defaultValue as DefaultValue).value.split('.')[1]]);\r\n                            this.formGroup.get(element.field).updateValueAndValidity();\r\n                            this.labelMap.set(element.field, item[(element.defaultValue as DefaultValue).value.split('.')[0]][(element.defaultValue as DefaultValue).value.split('.')[1]]);\r\n                        }\r\n                    } else {\r\n                        if ((element.defaultValue as DefaultValue).format) {\r\n                            if (element.type !== \"label\") {\r\n                                this.formGroup.get(element.field).setValue((element.defaultValue as DefaultValue).format(item[element.field]));\r\n                                this.formGroup.get(element.field).updateValueAndValidity();\r\n                            } else {\r\n                                this.formGroup.get(element.field).setValue(item[element.field]);\r\n                                this.formGroup.get(element.field).updateValueAndValidity();\r\n                                this.labelMap.set(element.field, (element.defaultValue as DefaultValue).format(item[element.field]));\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.labelMap.clear();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private updateUniqueOption(): void {\r\n        let monoselectsUnique = this.columns.filter(element => element.type === \"monoselect\" && element.unique);\r\n        if (monoselectsUnique.length > 0) {\r\n            monoselectsUnique.forEach(element => {\r\n                if (element.monoselectConfig.options && element.unique) {\r\n                    if (this.isString(element.unique)) {\r\n                        if ((element.unique as string).includes(\".\")) {\r\n                            element.monoselectConfig.options = element.monoselectConfig.options.filter(item => !this.currentConfig.value.map(str => str[element.field][(element.unique as string).split('.')[0]][(element.unique as string).split('.')[1]]).includes(item[(element.unique as string).split('.')[0]][(element.unique as string).split('.')[1]]));\r\n                        } else {\r\n                            element.monoselectConfig.options = element.monoselectConfig.options.filter(item => !this.currentConfig.value.map(str => str[element.field][(element.unique as string)]).includes(item[(element.unique as string)]));\r\n                        }\r\n                    } else {\r\n                        element.monoselectConfig.options = element.monoselectConfig.options.filter(item => !this.currentConfig.value.map(str => str[element.field]).includes(item[element.field]));\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    private hideOrDisplayAddButton(): void {\r\n        if (this.currentConfig && this.currentConfig.hasOwnProperty(\"addable\")) {\r\n            let monoselectsUniqueAndEmptyOptions = this.columns.filter(element => element.type === \"monoselect\" && element.monoselectConfig && (!element.monoselectConfig.options || element.monoselectConfig.options.length == 0));\r\n            if (monoselectsUniqueAndEmptyOptions.length > 0 || this.displayLine == true) {\r\n                this.hideAddButtonChanged.emit(true);\r\n            } else {\r\n                this.hideAddButtonChanged.emit(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private validationsWithCondition(data: any, key: string): void {\r\n        let columnValidationsWithCondition = this.columns.filter(item => item.validationsWithCondition);\r\n        if (columnValidationsWithCondition && columnValidationsWithCondition.length > 0) {\r\n            columnValidationsWithCondition.forEach(element => {\r\n                let result = element.validationsWithCondition.find(item => data[key] == item.value);\r\n                if (result) {\r\n                    this.formGroup.get(element.field).setValue(data[element.field]);\r\n                    this.formGroup.get(element.field).setValidators(result.validators);\r\n                    this.getErrorForConditionValidation = result.error;\r\n                    this.formGroup.get(element.field).updateValueAndValidity();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    public getEditableLigne(id: string): boolean {\r\n        return this.editableLigneMap.get(id);\r\n    }\r\n\r\n    public selectItem(index: number, data: any, id: string) {\r\n        this.editableLigneMap = this.editableLigneMap.filter((value, key) => key != id);\r\n        this.editableLigneMap.forEach((item, key) => this.editableLigneMap.set(key, false));\r\n        this.editableLigneMap.set(id, true);\r\n        this.action = ActionEnum.UPDATE;\r\n        this.initForm();\r\n        this.columns.forEach(element => {\r\n            if (element.editable == false) {\r\n                this.columnsEditable.set(element.field, true);\r\n            } else {\r\n                this.columnsEditable.set(element.field, false);\r\n            }\r\n        })\r\n        Object.keys(data).forEach(key => {\r\n            if (data[key]) {\r\n\r\n                let optionsConditionColumns = this.columns.filter(element => element.hasOwnProperty(\"optionsWithCondition\"));\r\n                if (optionsConditionColumns.length > 0) {\r\n                    optionsConditionColumns.forEach(element => {\r\n                        element.optionsWithCondition.forEach(item => {\r\n                            if (item.value === data[key]) {\r\n                                element.monoselectConfig.options = item.values;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                if (this.formGroup.get(key)) {\r\n                    if (moment(data[key], \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid()) {\r\n                        this.formGroup.get(key).setValue(this.datePipe.transform(new Date(data[key]), \"yyyy-MM-dd\"));\r\n                        this.labelMap.set(key, this.datePipe.transform(new Date(data[key]), \"yyyy-MM-dd\"));\r\n                    } else {\r\n                        this.validationsWithCondition(data, key);\r\n                        let column = this.columns.find(element => element.type === \"label\" && element.field === key);\r\n                        if (column) {\r\n                            this.formGroup.get(key).setValue(data[key]);\r\n                            if (column.defaultValue && (column.defaultValue as DefaultValue).value) {\r\n                                if (Object.prototype.toString.call(data[key]) == \"[object Object]\" && column && (column.defaultValue as DefaultValue).value.includes(\".\")) {\r\n                                    this.labelMap.set(key, data[key][(column.defaultValue as DefaultValue).value.split('.')[1]]);\r\n                                } else {\r\n                                    this.labelMap.set(key, data[key]);\r\n                                }\r\n                            } else {\r\n                                this.labelMap.set(key, data[key]);\r\n                            }\r\n                        }\r\n                        this.formGroup.get(key).setValue(data[key]);\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.formGroup.get(key)) {\r\n                    this.formGroup.get(key).setValue(null);\r\n                }\r\n                this.labelMap.set(key, null);\r\n            }\r\n        })\r\n        this.hideAddButtonChanged.emit(true);\r\n        let array = Object.keys(data).filter(item => !Object.keys(this.formGroup.value).includes(item));\r\n        if (array.length > 0) {\r\n            array.forEach(element => this.formGroup.addControl(element, new FormControl(data[element])));\r\n        }\r\n    }\r\n\r\n    public sendItem(action: ActionEnum, data: any, index: number) {\r\n        let dataValue: DataValue = { action: action, value: data };\r\n        this.sendData.emit(dataValue);\r\n        if (action === ActionEnum.UPDATE && this.columns.every(column => column.hasOwnProperty(\"type\"))) {\r\n            this.selectItem(index, data, this.currentConfig.id + '-' + this.getIndex(index));\r\n        }\r\n        if (action === ActionEnum.DELETE && this.sendData.observers.length > 0) {\r\n            this.updateUniqueOption();\r\n            this.hideOrDisplayAddButton();\r\n            this.resetLine(ActionEnum.DELETE);\r\n        }\r\n    }\r\n\r\n    public confirm(): void {\r\n        if (!this.isLineHasElementNotValid()) {\r\n            this.sendData.emit({ action: this.action, value: this.formGroup.value });\r\n            if (this.sendData.observers.length > 0) {\r\n                this.resetLine();\r\n            }\r\n        }\r\n    }\r\n\r\n    public enterKeyup(): void {\r\n        if (!this.isLineHasElementNotValid()) {\r\n            this.sendData.emit({ action: this.action, value: this.formGroup.value });\r\n            if (this.sendData.observers.length > 0) {\r\n                this.resetLine();\r\n            }\r\n        }\r\n    }\r\n\r\n    public resetLine(action?: ActionEnum): void {\r\n        this.action = null;\r\n        this.formGroup.reset();\r\n        this.formGroup.clearValidators();\r\n        this.formGroup.updateValueAndValidity();\r\n        Object.keys(this.formGroup.controls).forEach(item => {\r\n            this.formGroup.get(item).clearValidators();\r\n            this.formGroup.get(item).updateValueAndValidity();\r\n        })\r\n        this.displayLine = false;\r\n        this.editableLigneMap.forEach((item, key) => this.editableLigneMap.set(key, false));\r\n        if (action != ActionEnum.DELETE) {\r\n            this.hideAddButtonChanged.emit(false);\r\n        }\r\n        this.labelMap.clear();\r\n        this.columns.forEach(element => {\r\n            this.columnsEditable.set(element.field, false);\r\n        })\r\n        let columnsHasDisabled = this.columns.filter(column => column.hasOwnProperty(\"disabled\"));\r\n        if (columnsHasDisabled) {\r\n            columnsHasDisabled.forEach(column => column.disabled = true);\r\n        }\r\n    }\r\n\r\n    public changeCalendar(field: string): void {\r\n        let columnsWithEvent = this.columns.filter(element => element.field === field && element.event);\r\n        if (columnsWithEvent.length > 0) {\r\n            this.onChangeCalendarFromTable.emit({ field: field, form: this.formGroup });\r\n        }\r\n\r\n        let column = this.columns.find(element => element.field === field && element.validations && element.validations.errors.length > 0);\r\n        if (column && this.formGroup.get(field).errors) {\r\n            Object.keys(this.formGroup.get(field).errors).forEach(item => this.validationError.set(field, column.validations.errors.get(item)))\r\n        }\r\n        if (this.validationError.has(field) && !this.formGroup.get(field).errors) {\r\n            this.validationError.delete(field);\r\n        }\r\n        this.setCalendarCondition(field);\r\n    }\r\n\r\n    private setCalendarCondition(field: string): void {\r\n        let calendarCondition = this.columns.filter(element => element.validations && element.validations.hasOwnProperty(\"condition\") && element.validations.condition.field === field);\r\n        if (calendarCondition.length > 0) {\r\n            calendarCondition.forEach(element => {\r\n                if (element.validations.condition.is === \"isNotEmpty\") {\r\n                    if (this.formGroup.get(field).value) {\r\n                        this.formGroup.get(element.field).setValidators(element.validations.validators);\r\n                    } else {\r\n                        this.formGroup.get(element.field).setValidators(null);\r\n                    }\r\n                    this.formGroup.get(element.field).updateValueAndValidity();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    public getErrorFormLoadDate(): string {\r\n        if (this.currentConfig && this.currentConfig.globalValidaros) {\r\n            let datesValidaros = this.currentConfig.globalValidaros.find(element => element.hasOwnProperty(\"dateLessThan\"));\r\n            if (datesValidaros) {\r\n                return datesValidaros.error;\r\n            }\r\n        }\r\n    }\r\n\r\n    public displayValue(value: string, column: Column): string {\r\n        if (column && value) {\r\n            if (column.field.includes(\".\")) {\r\n                let array: string[] = column.field.split('.');\r\n                let str: string = value[array[0]];\r\n                if (str) {\r\n                    for (let i = 1; i < array.length; i++) {\r\n                        str = str[array[i]];\r\n                    }\r\n                }\r\n                if (column.defaultValue && (column.defaultValue as DefaultValue).value) {\r\n                    return this.getDataPipe(column.pipe, this.getDefaultValue(str, column));\r\n                } else if (moment(str, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid() || moment(str, \"YYYY-MM-DD\", true).isValid()) {\r\n                    return this.getDataPipe(column.pipe, this.datePipe.transform(new Date(str), \"dd/MM/yyyy\"));\r\n                } else {\r\n                    return this.getDataPipe(column.pipe, str);\r\n                }\r\n            } else {\r\n                if (column.multiselectConfig) {\r\n                    if (column.multiselectConfig.type == 'objects') {\r\n                        if (column.multiselectConfig.bindValue) {\r\n                            return this.getDataPipe(column.pipe, value[column.field]);\r\n                        } else {\r\n                            return this.getDataPipe(column.pipe, value[column.field].map(element => element[column.multiselectConfig.bindLabel]).join(\", \"));\r\n                        }\r\n                    } else {\r\n                        return this.getDataPipe(column.pipe, value[column.field]);\r\n                    }\r\n                } else if (column.monoselectConfig) {\r\n                    return this.getDataPipe(column.pipe, value[column.field]);\r\n                } else if (column.defaultValue && (column.defaultValue as DefaultValue).value) {\r\n                    return this.getDataPipe(column.pipe, this.getDefaultValue(value[column.field], column));\r\n                } else if (moment(value[column.field], \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid() || moment(value[column.field], \"YYYY-MM-DD\", true).isValid()) {\r\n                    return this.getDataPipe(column.pipe, this.datePipe.transform(new Date(value[column.field]), \"dd/MM/yyyy\"));\r\n                } else {\r\n                    return this.getDataPipe(column.pipe, value[column.field]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getDefaultValue(value: string, column: Column): string {\r\n        if (Object.prototype.toString.call(value[column.field]) == \"[object Object]\" && (column.defaultValue as DefaultValue).value.includes(\".\")) {\r\n            if (moment(value[column.field][(column.defaultValue as DefaultValue).value.split('.')[1]], \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid() ||\r\n                moment(value[column.field][(column.defaultValue as DefaultValue).value.split('.')[1]], \"YYYY-MM-DD\", true).isValid()) {\r\n                return this.getDataPipe(column.pipe, this.datePipe.transform(new Date(value[column.field][(column.defaultValue as DefaultValue).value.split('.')[1]]), \"dd/MM/yyyy\"));\r\n            } else {\r\n                return this.getDataPipe(column.pipe, value[column.field][(column.defaultValue as DefaultValue).value.split('.')[1]]);\r\n            }\r\n        } else {\r\n            if (moment(value[column.field], \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid() || moment(value[column.field], \"YYYY-MM-DD\", true).isValid()) {\r\n                return this.getDataPipe(column.pipe, this.datePipe.transform(new Date(value[column.field]), \"dd/MM/yyyy\"));\r\n            } else {\r\n                return this.getDataPipe(column.pipe, value[column.field]);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getDataPipe(pipe: Pipe, value): string {\r\n        if (pipe) {\r\n            let params = pipe.params ? pipe.params : [];\r\n            return pipe.function.transform(value, params);\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    public isElementRequired(field: string): boolean {\r\n        return this.formGroup.get(field) && this.formGroup.get(field).hasError(\"required\");\r\n    }\r\n\r\n    public isLineHasElementNotValid(): boolean {\r\n        /*const a = Object.keys(this.formGroup.controls).filter(key => this.formGroup.get(key).invalid).length > 0 || this.isPropertiesNull(this.formGroup.value);\r\n        const b = this.formGroup.invalid || a;\r\n        console.log(this.formGroup.invalid + \" --- \" + a + \" --- \" + b);*/\r\n        return Object.keys(this.formGroup.controls).filter(key => this.formGroup.get(key).invalid).length > 0 || this.isPropertiesNull(this.formGroup.value) || this.formGroup.invalid;\r\n    }\r\n\r\n    private isPropertiesNull(obj): boolean {\r\n        for (var key in obj) {\r\n            if (obj[key] !== null && obj[key] != \"\")\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public isInvalidElement(field: string): boolean {\r\n        return this.formGroup.get(field).invalid && !this.formGroup.get(field).hasError(\"required\");\r\n    }\r\n\r\n    private dateLessThan(firstDate: string, secondDate: string, validatorField: { [key: string]: boolean }): ValidatorFn {\r\n        return (c: AbstractControl): { [key: string]: boolean } | null => {\r\n            if (c.get(firstDate) && c.get(secondDate)) {\r\n                let date1 = c.get(firstDate).value;\r\n                let date2 = c.get(secondDate).value;\r\n                if (Dates.toDate(date1).valid && Dates.toDate(date2).valid && Dates.toDate(date1).date && Dates.toDate(date2).date &&\r\n                    Dates.toDate(date1).date.getTime() > Dates.toDate(date2).date.getTime()) {\r\n                    return validatorField;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n\r\n    public keyupFilter(event, field): void {\r\n        this.fieldForFilter = field;\r\n        this.valueForFilter = event.target.value;\r\n    }\r\n\r\n    public sortArray(column): void {\r\n        this.reverse = !this.reverse;\r\n        this.fieldForSort = column.field;\r\n        this.spans.forEach((elementRef: ElementRef) => {\r\n            if (elementRef.nativeElement.id === 'sort-' + column.field) {\r\n                if (elementRef.nativeElement.classList.contains('sorting_asc')) {\r\n                    this.renderer2.removeClass(elementRef.nativeElement, \"sorting_asc\");\r\n                    this.renderer2.addClass(elementRef.nativeElement, \"sorting_desc\");\r\n                } else if (elementRef.nativeElement.classList.contains('sorting_desc')) {\r\n                    this.renderer2.removeClass(elementRef.nativeElement, \"sorting_desc\");\r\n                    this.renderer2.addClass(elementRef.nativeElement, \"sorting_asc\");\r\n                }\r\n            } else {\r\n                this.renderer2.removeClass(elementRef.nativeElement, \"sorting_desc\");\r\n                this.renderer2.addClass(elementRef.nativeElement, \"sorting_asc\");\r\n            }\r\n        })\r\n    }\r\n\r\n    public getUpdateAction(): Action {\r\n        return this.currentConfig.actions ? this.currentConfig.actions.find(action => action.name === ActionEnum.UPDATE) : null;\r\n    }\r\n\r\n    public getDeleteAction(): Action {\r\n        return this.currentConfig.actions ? this.currentConfig.actions.find(action => action.name === ActionEnum.DELETE) : null;\r\n    }\r\n\r\n    public geActionsWithIcon(): Action[] {\r\n        this.currentConfig.columns.every(column => column.hasOwnProperty(\"sortable\"));\r\n        return this.currentConfig.actions ? this.currentConfig.actions.filter(action => action.icon) : null;\r\n    }\r\n\r\n    public isAllColumnSortable(): boolean {\r\n        return this.currentConfig.columns.every(column => column.hasOwnProperty(\"sortable\") && this.allItems.length > 1);\r\n    }\r\n\r\n    public displayAction(action: Action): boolean {\r\n        let result: boolean = false;\r\n        if (action.hasOwnProperty('condition')) {\r\n            if (this.allItems.length > action.condition.min) {\r\n                result = true;\r\n            } else if (this.allItems.length < action.condition.max) {\r\n                result = true;\r\n            }\r\n        } else {\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public checkAllLignes(event): void {\r\n        if (event.target.checked) {\r\n            this.principalChecked = true;\r\n            if (this.allItems) {\r\n                this.allItems.forEach((item, index) => this.itemsChecked.set(this.currentConfig.id + \"-\" + index, item));\r\n            }\r\n        } else {\r\n            this.principalChecked = false;\r\n            if (this.allItems) {\r\n                this.allItems.forEach((item, index) => this.itemsChecked.set(this.currentConfig.id + \"-\" + index, null));\r\n            }\r\n        }\r\n        this.selectedRows = this.itemsChecked.values().filter(item => item);\r\n        this.onRowSelect.emit(this.itemsChecked.values().filter(item => item));\r\n    }\r\n\r\n    public getItemsChecked(event, value, id): void {\r\n        if (event.target.checked) {\r\n            this.itemsChecked.set(id, value);\r\n        } else {\r\n            this.principalChecked = false;\r\n            this.itemsChecked.set(id, null);\r\n        }\r\n        this.selectedRows = this.itemsChecked.values().filter(item => item);\r\n        this.onRowSelect.emit(this.itemsChecked.values().filter(item => item));\r\n    }\r\n\r\n    public getItemChecked(event, value, id): void {\r\n        if (event.target.checked) {\r\n            this.itemsChecked.set(id, value);\r\n            this.itemsChecked.forEach((value, key) => {\r\n                if (id != key) {\r\n                    this.itemsChecked.set(key, null);\r\n                }\r\n            })\r\n        } else {\r\n            this.itemsChecked.set(id, null);\r\n        }\r\n        this.selectedRows = this.itemsChecked.values().filter(item => item);\r\n        this.onRowSelect.emit(this.itemsChecked.values().filter(item => item));\r\n    }\r\n\r\n    public setPage(data: any) {\r\n        if (data.totalItems) {\r\n            this.pager = this.pagerService.getPager(this.allItems.length, data.page, data.totalItems);\r\n        } else {\r\n            this.pager = this.pagerService.getPager(this.allItems.length, data.page, this.currentConfig.pagination.rowsPerPage);\r\n        }\r\n        this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n    }\r\n\r\n    public getIndex(index): number {\r\n        if (this.currentConfig.pagination) {\r\n            return index + this.pager.pageSize * (this.pager.currentPage - 1);\r\n        } else {\r\n            return index;\r\n        }\r\n    }\r\n\r\n    private isString(value) {\r\n        return typeof value === 'string' || value instanceof String;\r\n    }\r\n\r\n}","<ng-container *ngIf=\"currentConfig\">\r\n\r\n    <div class=\"row mx-0\">\r\n        <div class=\"col-12 px-0\">\r\n\r\n            <div class=\"row mx-0\">\r\n                <div class=\"col-12 px-0\">\r\n                    <div class=\"table table-action mb-1\">\r\n                        <table class=\"table table-hover table-form table-small\"\r\n                            style=\"table-layout: fixed; word-wrap: break-word;\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th *ngIf=\"currentConfig?.selectionMode === 'multiple' && allItems?.length > 0\"\r\n                                        class=\"v-align-middle\" style=\"width: 5%\">\r\n                                        <input type=\"checkbox\" id=\"box-0\" [checked]=\"principalChecked\"\r\n                                            (change)=\"checkAllLignes($event)\">\r\n                                        <label for=\"box-0\"\r\n                                            [ngClass]=\"{'principal-check': !isAllColumnSortable(), 'principal-check-filter': isAllColumnSortable()}\"></label>\r\n                                    </th>\r\n                                    <th *ngIf=\"currentConfig?.selectionMode === 'single'\" class=\"v-align-middle\"\r\n                                        style=\"width: 5%\">\r\n                                    </th>\r\n                                    <th [columnWidth]=\"column?.width\" [columnsLength]=\"columns?.length\"\r\n                                        [selectionMode]=\"currentConfig?.hasOwnProperty('selectionMode')\"\r\n                                        *ngFor=\"let column of columns; let x = index\" rowspan=\"1\" colspan=\"1\"\r\n                                        style=\"padding: 10px 15px 0 !important;\">\r\n                                        <div [ngClass]=\"{'form-ui': column?.filterable && allItems?.length > 1}\">\r\n                                            <ng-container *ngIf=\"column?.filterable && allItems?.length > 1\">\r\n                                                <input type=\"text\" required=\"\" class=\"d-inline\"\r\n                                                    (keyup)=\"keyupFilter($event, column?.field)\" title=\"\">\r\n                                            </ng-container>\r\n                                            <label style=\"font-weight: 700;\">{{column?.header}}<span\r\n                                                    *ngIf=\"isElementRequired(column?.field) && displayLine\"\r\n                                                    class=\"color-error required\"></span></label>\r\n\r\n                                            <ng-container *ngIf=\"column?.sortable && allItems?.length > 1\">\r\n                                                <span #sort [id]=\"'sort-'+column?.field\" (click)=\"sortArray(column)\"\r\n                                                    class=\"sorting_asc\"></span>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th style=\"width: 8%\"\r\n                                        *ngIf=\"currentConfig?.actions?.length > 0 && allItems?.length > 0\">\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                <tr id=\"editLigne\" class=\"background-tr\" *ngIf=\"displayLine\"\r\n                                    (keyup.enter)=\"currentConfig?.addable ? enterKeyup() : 'false'\">\r\n                                    <td *ngIf=\"currentConfig?.selectionMode\"></td>\r\n                                    <ng-container [formGroup]=\"formGroup\">\r\n                                        <td [columnWidth]=\"column?.width\" [columnsLength]=\"columns?.length\" class=\"px-1\"\r\n                                            *ngFor=\"let column of columns\" [id]=\"column?.field\">\r\n                                            <ng-container *ngIf=\"column?.type === 'monoselect'\">\r\n                                                <ng-select [items]=\"column?.monoselectConfig?.options\"\r\n                                                    [formControlName]=\"column?.field\"\r\n                                                    [bindLabel]=\"column?.monoselectConfig?.bindLabel\"\r\n                                                    [bindValue]=\"column?.monoselectConfig?.bindValue\"\r\n                                                    (change)=\"onChangeItem($event, column?.field)\"\r\n                                                    [placeholder]=\"column?.placeholder ? column?.placeholder : ''\"\r\n                                                    [readonly]=\"columnsEditable.get(column?.field) || column?.disabled\">\r\n                                                </ng-select>\r\n                                            </ng-container>\r\n\r\n                                            <ng-container *ngIf=\"column?.type === 'multiselect'\">\r\n                                                <ng-select [items]=\"column?.multiselectConfig?.options\"\r\n                                                    [formControlName]=\"column?.field\" [multiple]=\"true\"\r\n                                                    [bindLabel]=\"column?.multiselectConfig?.bindLabel\"\r\n                                                    [bindValue]=\"column?.multiselectConfig?.bindValue\"\r\n                                                    (change)=\"onChangeItem($event, column?.field)\"\r\n                                                    [placeholder]=\"column?.placeholder ? column?.placeholder : ''\"\r\n                                                    [readonly]=\"columnsEditable.get(column?.field) || column?.disabled\">\r\n                                                </ng-select>\r\n                                            </ng-container>\r\n\r\n                                            <ng-container *ngIf=\"column?.type === 'text'\">\r\n                                                <input [formControlName]=\"column?.field\"\r\n                                                    [placeholder]=\"column?.placeholder ? column?.placeholder : ''\"\r\n                                                    [disabled]=\"columnsEditable.get(column?.field) || column?.disabled\"\r\n                                                    style=\"background-color: white !important\" />\r\n                                                <p class=\"media line-break\"\r\n                                                    *ngIf=\"isInvalidElement(column?.field) && column?.validations?.error\"\r\n                                                    style=\"cursor: default\" [title]=\"column?.validations?.error\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small class=\"color-error \">{{column?.validations?.error}}</small>\r\n                                                </p>\r\n                                                <p class=\"media line-break\"\r\n                                                    *ngIf=\"isInvalidElement(column?.field) && getErrorForConditionValidation\"\r\n                                                    style=\"cursor: default\" [title]=\"getErrorForConditionValidation\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small\r\n                                                        class=\"color-error \">{{getErrorForConditionValidation}}</small>\r\n                                                </p>\r\n                                            </ng-container>\r\n\r\n                                            <ng-container *ngIf=\"column?.type === 'number'\">\r\n                                                <input type=\"number\" [formControlName]=\"column?.field\"\r\n                                                    [placeholder]=\"column?.placeholder ? column?.placeholder : ''\"\r\n                                                    [disabled]=\"columnsEditable.get(column?.field) || column?.disabled\"\r\n                                                    style=\"background-color: white !important\" />\r\n                                                <p class=\"media line-break\"\r\n                                                    *ngIf=\"isInvalidElement(column?.field) && column?.validations?.error\"\r\n                                                    style=\"cursor: default\" [title]=\"column?.validations?.error\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small class=\"color-error \">{{column?.validations?.error}}</small>\r\n                                                </p>\r\n                                                <p class=\"media line-break\"\r\n                                                    *ngIf=\"isInvalidElement(column?.field) && getErrorForConditionValidation\"\r\n                                                    style=\"cursor: default\" [title]=\"getErrorForConditionValidation\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small\r\n                                                        class=\"color-error \">{{getErrorForConditionValidation}}</small>\r\n                                                </p>\r\n                                            </ng-container>\r\n\r\n                                            <ng-container *ngIf=\"column?.type === 'calendar'\">\r\n                                                <input type=\"date\" [formControlName]=\"column?.field\"\r\n                                                    [placeholder]=\"column?.placeholder ? column?.placeholder : ''\"\r\n                                                    (change)=\"changeCalendar(column?.field)\"\r\n                                                    [disabled]=\"columnsEditable.get(column?.field) || column?.disabled\" />\r\n                                                <p class=\"media line-break\" *ngIf=\"formGroup.hasError('loaddate')\"\r\n                                                    style=\"cursor: default\" [title]=\"getErrorFormLoadDate()\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small class=\"color-error\">{{getErrorFormLoadDate()}}</small>\r\n                                                </p>\r\n                                                <p class=\"media line-break\"\r\n                                                    *ngIf=\"isInvalidElement(column?.field) && column?.validations?.error\"\r\n                                                    style=\"cursor: default\" [title]=\"column?.validations?.error\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small class=\"color-error \">{{column?.validations?.error}}</small>\r\n                                                </p>\r\n                                                <p class=\"media line-break\" *ngIf=\"validationError.has(column?.field)\"\r\n                                                    style=\"cursor: default\"\r\n                                                    [title]=\"validationError.get(column?.field)\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small\r\n                                                        class=\"color-error\">{{validationError.get(column?.field)}}</small>\r\n                                                </p>\r\n                                            </ng-container>\r\n\r\n                                            <ng-container *ngIf=\"column?.type === 'label'\">\r\n                                                <label class=\" my-2\"\r\n                                                    [title]=\"labelMap?.get(column?.field)\">{{labelMap?.get(column?.field)}}</label>\r\n                                            </ng-container>\r\n                                        </td>\r\n                                        <td style=\"width: 8%\" class=\"text-center px-0 py-3\">\r\n                                            <a class=\"mr-1\" title=\"Valider\"\r\n                                                *ngIf=\"getUpdateAction() || currentConfig?.addable\" (click)=\"confirm()\"\r\n                                                [class.disabled]=\"isLineHasElementNotValid()\">\r\n                                                <i class=\"icons icon-check size-16\"></i>\r\n                                            </a>\r\n                                            <a class=\"ml-1\" title=\"Annuler\" *ngIf=\"displayLine\" (click)=\"resetLine()\">\r\n                                                <i class=\"icons icon-cancel size-16\"></i>\r\n                                            </a>\r\n                                        </td>\r\n                                    </ng-container>\r\n                                </tr>\r\n\r\n                                <tr *ngFor=\"let value of arrayOfItems() | filter: valueForFilter: fieldForFilter | orderBy: fieldForSort:reverse:true; let j = index\"\r\n                                    [id]=\"currentConfig?.id +'-'+ getIndex(j)\">\r\n\r\n                                    <ng-container *ngIf=\"!getEditableLigne(currentConfig?.id +'-'+ getIndex(j))\">\r\n                                        <td *ngIf=\"currentConfig?.selectionMode === 'multiple'\" class=\"v-align-middle\">\r\n                                            <input type=\"checkbox\" [id]=\"currentConfig?.id +'--'+ getIndex(j)\"\r\n                                                [checked]=\"itemsChecked.get(currentConfig?.id +'-'+ getIndex(j))\"\r\n                                                (change)=\"getItemsChecked($event, value, currentConfig?.id +'-'+ getIndex(j))\">\r\n                                            <label [for]=\"currentConfig?.id +'--'+ getIndex(j)\"></label>\r\n                                        </td>\r\n                                        <td *ngIf=\"currentConfig?.selectionMode === 'single'\" class=\"v-align-middle\">\r\n                                            <input type=\"checkbox\" [id]=\"currentConfig?.id +'--'+ getIndex(j)\"\r\n                                                [checked]=\"itemsChecked.get(currentConfig?.id +'-'+ getIndex(j))\"\r\n                                                (change)=\"getItemChecked($event, value, currentConfig?.id +'-'+ getIndex(j))\">\r\n                                            <label [for]=\"currentConfig?.id +'--'+ getIndex(j)\"></label>\r\n                                        </td>\r\n                                        <!-- display ligne -->\r\n                                        <td *ngFor=\"let column of columns; let i = index\" [style.overflow]=\"'hidden'\"\r\n                                            [ngStyle]=\"{'cursor': editableWithSelectMode && notEditableCondition(value[currentConfig?.notEditableCondition?.field]) && !displayLine ? 'pointer' : 'default'}\"\r\n                                            (click)=\"editableWithSelectMode && notEditableCondition(value[currentConfig?.notEditableCondition?.field]) && !displayLine ? selectItem(getIndex(j), value, currentConfig?.id +'-'+ getIndex(j)) : 'false'\">\r\n                                            <!-- icon -->\r\n                                            <ng-container *ngIf=\"column?.link;else other_display\">\r\n                                                <a href=\"javascript:void(0)\" [title]=\"column?.link.text\"\r\n                                                    (click)=\"sendItem(null, value, getIndex(j))\">{{column?.link.text}}</a>\r\n                                            </ng-container>\r\n                                            <!-- text -->\r\n                                            <ng-template #other_display>\r\n                                                <span [title]=\"displayValue(value, column)\">\r\n                                                    {{displayValue(value, column)}}</span>\r\n                                            </ng-template>\r\n                                        </td>\r\n                                        <!-- actions -->\r\n                                        <td style=\"width: 8%\" class=\"text-center px-0\"\r\n                                            *ngIf=\"currentConfig?.actions && currentConfig?.actions.length > 0\">\r\n                                            <ng-container *ngFor=\"let action of geActionsWithIcon()\">\r\n                                                <a class=\"mr-1 pr-2\" [title]=\"action?.icon?.tooltip\"\r\n                                                    *ngIf=\"displayAction(action)\">\r\n                                                    <i class=\"icons {{action?.icon?.class}}\"\r\n                                                        (click)=\"sendItem(action?.name, value, getIndex(j))\"></i>\r\n                                                </a>\r\n                                            </ng-container>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container [formGroup]=\"formGroup\"\r\n                                        *ngIf=\"getEditableLigne(currentConfig?.id +'-'+ getIndex(j))\">\r\n                                        <td *ngIf=\"currentConfig?.selectionMode\"></td>\r\n                                        <!-- editable ligne -->\r\n                                        <td *ngFor=\"let column of columns\" [columnWidth]=\"column?.width\"\r\n                                            [columnsLength]=\"columns?.length\" class=\"px-1\" [id]=\"column?.field\"\r\n                                            (keyup.enter)=\"getUpdateAction() ? enterKeyup() : 'false'\">\r\n                                            <ng-container *ngIf=\"column?.type === 'monoselect'\">\r\n                                                <ng-select [items]=\"column?.monoselectConfig?.options\"\r\n                                                    [formControlName]=\"column?.field\"\r\n                                                    [bindLabel]=\"column?.monoselectConfig?.bindLabel\"\r\n                                                    [bindValue]=\"column?.monoselectConfig?.bindValue\"\r\n                                                    (change)=\"onChangeItem($event, column?.field)\"\r\n                                                    [placeholder]=\"column?.placeholder ? column?.placeholder : ''\"\r\n                                                    [readonly]=\"columnsEditable.get(column?.field) && column?.disabled\">\r\n                                                </ng-select>\r\n                                            </ng-container>\r\n\r\n                                            <ng-container *ngIf=\"column?.type === 'multiselect'\">\r\n                                                <ng-select [items]=\"column?.multiselectConfig?.options\"\r\n                                                    [formControlName]=\"column?.field\" [multiple]=\"true\"\r\n                                                    [bindLabel]=\"column?.multiselectConfig?.bindLabel\"\r\n                                                    [bindValue]=\"column?.multiselectConfig?.bindValue\"\r\n                                                    (change)=\"onChangeItem($event, column?.field)\"\r\n                                                    [placeholder]=\"column?.placeholder ? column?.placeholder : ''\"\r\n                                                    [readonly]=\"columnsEditable.get(column?.field) || column?.disabled\">\r\n                                                </ng-select>\r\n                                            </ng-container>\r\n\r\n                                            <ng-container *ngIf=\"column?.type === 'text'\">\r\n                                                <input [formControlName]=\"column?.field\"\r\n                                                    [placeholder]=\"column?.placeholder ? column?.placeholder : ''\"\r\n                                                    [disabled]=\"columnsEditable.get(column?.field) || column?.disabled\"\r\n                                                    style=\"background-color: white !important\" />\r\n                                                <p class=\"media line-break\"\r\n                                                    *ngIf=\"isInvalidElement(column?.field) && column?.validations?.error\"\r\n                                                    style=\"cursor: default\" [title]=\"column?.validations?.error\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small class=\"color-error \">{{column?.validations?.error}}</small>\r\n                                                </p>\r\n                                                <p class=\"media line-break\"\r\n                                                    *ngIf=\"isInvalidElement(column?.field) && getErrorForConditionValidation\"\r\n                                                    style=\"cursor: default\" [title]=\"getErrorForConditionValidation\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small\r\n                                                        class=\"color-error \">{{getErrorForConditionValidation}}</small>\r\n                                                </p>\r\n                                            </ng-container>\r\n\r\n                                            <ng-container *ngIf=\"column?.type === 'number'\">\r\n                                                <input type=\"number\" [formControlName]=\"column?.field\"\r\n                                                    [placeholder]=\"column?.placeholder ? column?.placeholder : ''\"\r\n                                                    [disabled]=\"columnsEditable.get(column?.field) || column?.disabled\"\r\n                                                    style=\"background-color: white !important\" />\r\n                                                <p class=\"media line-break\"\r\n                                                    *ngIf=\"isInvalidElement(column?.field) && column?.validations?.error\"\r\n                                                    style=\"cursor: default\" [title]=\"column?.validations?.error\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small class=\"color-error \">{{column?.validations?.error}}</small>\r\n                                                </p>\r\n                                                <p class=\"media line-break\"\r\n                                                    *ngIf=\"isInvalidElement(column?.field) && getErrorForConditionValidation\"\r\n                                                    style=\"cursor: default\" [title]=\"getErrorForConditionValidation\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small\r\n                                                        class=\"color-error \">{{getErrorForConditionValidation}}</small>\r\n                                                </p>\r\n                                            </ng-container>\r\n\r\n                                            <ng-container *ngIf=\"column?.type === 'calendar'\">\r\n                                                <input type=\"date\" [formControlName]=\"column?.field\"\r\n                                                    [placeholder]=\"column?.placeholder ? column?.placeholder : ''\"\r\n                                                    (change)=\"changeCalendar(column?.field)\"\r\n                                                    [disabled]=\"columnsEditable.get(column?.field) || column?.disabled\" />\r\n                                                <p class=\"media line-break\" *ngIf=\"formGroup.hasError('loaddate')\"\r\n                                                    style=\"cursor: default\" [title]=\"getErrorFormLoadDate()\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small class=\"color-error\">{{getErrorFormLoadDate()}}</small>\r\n                                                </p>\r\n                                                <p class=\"media line-break\"\r\n                                                    *ngIf=\"isInvalidElement(column?.field) && column?.validations?.error\"\r\n                                                    style=\"cursor: default\" [title]=\"column?.validations?.error\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small class=\"color-error \">{{column?.validations?.error}}</small>\r\n                                                </p>\r\n                                                <p class=\"media line-break\" *ngIf=\"validationError.has(column?.field)\"\r\n                                                    style=\"cursor: default\"\r\n                                                    [title]=\"validationError.get(column?.field)\">\r\n                                                    <i class=\"icons icon-cancel color-error font-size-16\"></i>\r\n                                                    <small\r\n                                                        class=\"color-error\">{{validationError.get(column?.field)}}</small>\r\n                                                </p>\r\n                                            </ng-container>\r\n\r\n                                            <ng-container *ngIf=\"column?.type === 'label'\">\r\n                                                <label style=\"padding-left: 11px;\"\r\n                                                    [title]=\"labelMap?.get(column?.field)\">{{labelMap?.get(column?.field)}}</label>\r\n                                            </ng-container>\r\n                                        </td>\r\n\r\n                                        <!-- actions -->\r\n                                        <td style=\"width: 8%\" class=\"text-center px-0 py-3\">\r\n                                            <a class=\"mr-1\" title=\"Valider\"\r\n                                                *ngIf=\"getUpdateAction() || currentConfig?.addable\" (click)=\"confirm()\"\r\n                                                [class.disabled]=\"isLineHasElementNotValid()\">\r\n                                                <i class=\"icons icon-check size-16\"></i>\r\n                                            </a>\r\n                                            <a class=\"ml-1\" title=\"Annuler\" (click)=\"resetLine()\">\r\n                                                <i class=\"icons icon-cancel size-16\"></i>\r\n                                            </a>\r\n                                        </td>\r\n                                    </ng-container>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <cm-pagination *ngIf=\"currentConfig?.pagination && pagedItems?.length > 0\" [pager]=\"pager\"\r\n                (updatePager)=\"setPage($event)\" [rowsPerPageOptions]=\"currentConfig?.pagination?.rowsPerPageOptions\">\r\n            </cm-pagination>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</ng-container>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ConfigService } from '@ngx-config/core';\nimport { SpecificUserResponse, UserResponse } from '../models';\n\n@Injectable()\nexport class IAMService {\n\n    readonly domain: string;\n\n    constructor(private config: ConfigService,\n        private httpClient: HttpClient) {\n        this.domain = this.config.getSettings('environment.serviceBaseUrl') + \"iam/\";\n    }\n\n    addUser(data): Observable<any> {\n        let httpOptions = { headers: new HttpHeaders({}), responseType: 'text' as 'json' };\n        return this.httpClient.post<any>(this.domain + 'user', data, httpOptions);\n    }\n\n    updateUser(data): Observable<void> {\n        return this.httpClient.put<void>(this.domain + 'user', data);\n    }\n\n    disabledUser(id): Observable<void> {\n        return this.httpClient.patch<void>(this.domain + 'user/disabled/' + id, null);\n    }\n\n    enabledUser(id): Observable<void> {\n        return this.httpClient.patch<void>(this.domain + 'user/enable/' + id, null);\n    }\n\n    deleteUser(id) {\n        return this.httpClient.delete<void>(this.domain + 'user/' + id);\n    }\n\n    getUsers(): Observable<UserResponse[]> {\n        return this.httpClient.get<UserResponse[]>(this.domain + 'users');\n    }\n\n    getSingleUser(username: string): Observable<UserResponse> {\n        return this.httpClient.get<UserResponse>(this.domain + 'user/' + username);\n    }\n\n    getUserByRole(role: string): Observable<SpecificUserResponse[]> {\n        return this.httpClient.get<SpecificUserResponse[]>(this.domain + 'users/' + role);\n    }\n\n    getRoles(): Observable<string[]> {\n        return this.httpClient.get<string[]>(this.domain + 'roles');\n    }\n\n}","import { Component, OnInit, Input, forwardRef, Output, EventEmitter, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { isBoolean } from 'util';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'sof-checkBox',\n    styleUrls: ['./checkbox.component.scss'],\n    templateUrl: './checkbox.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => CmCheckBoxContainerComponent),\n            multi: true\n        }\n    ]\n})\nexport class CmCheckBoxContainerComponent implements OnInit, ControlValueAccessor {\n\n    @Output() onCheck = new EventEmitter();\n    @Output() unCheck = new EventEmitter();\n    @Input('value') _value;\n    selectedItemsValues: any[] = [];\n    disabled = null;\n    @Input('bindLabel') bindLabel: any;\n    @Input() bindValue: any;\n    @Input() isdisabled: boolean = false;\n    @Input() radioSwitch;\n    //When true the sof-checkbox will bind a simple boolean in ngModel\n    @Input() booleanValue: any = false;\n    @Input() switch: any;\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor() { }\n\n    ngOnInit() {\n        if (this.isChechboxBoolean()) {\n            if (this._value != undefined && !isBoolean(this._value)) {\n                throw new Error(\"You should provide boolean value in ngModel when using the attribute booleanValue = 'true'\");\n            }\n        } else {\n            if (this.checkValue()) {\n                throw new Error(\"checkBox should contain attribute bindLabel!\");\n            }\n        }\n    }\n\n    get value() {\n        return this.isChechboxBoolean() ? this._value : this.selectedItemsValues;\n    }\n\n    set value(item) {\n        if (this.isChechboxBoolean()) {\n            this._value = !this._value;\n            this.onChange(this._value);\n            this.onTouched();\n        } else {\n            if (this.selectedItemsValues.indexOf(item) !== -1) {\n                this.selectedItemsValues = this.selectedItemsValues.filter(element => item !== element);\n            } else {\n                this.selectedItemsValues.push(item);\n            }\n            this.onChange(this.selectedItemsValues);\n            this.onTouched();\n        }\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value) {\n        if (this.isChechboxBoolean()) {\n            if (value) {\n                this._value = value;\n            }\n        } else {\n            if (value) {\n                this.selectedItemsValues = value;\n            }\n        }\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n    }\n\n    isChechboxBoolean() {\n        return this.booleanValue === true || this.booleanValue === \"true\";\n    }\n\n    isChecked(item) {\n        if (this.isChechboxBoolean()) {\n            return this._value;\n        }\n        return (!this.bindValue ? ((this.selectedItemsValues.indexOf(item) === -1) ? false : true) : ((this.selectedItemsValues.indexOf(item[this.bindValue]) === -1) ? false : true));\n    }\n\n    check(item) {\n        if (this.isChechboxBoolean()) {\n            this.value = item;\n        } else {\n            if (!this.bindValue) {\n                this.value = item;\n            } else {\n                this.value = item[this.bindValue];\n            }\n        }\n    }\n\n    checkValue() {\n        return !this.bindLabel;\n    }\n\n}","<div id=\"checkbox\" *ngIf=\"!switch\">\n    <input id=\"inputcheckbox\" *ngIf=\"(!isChechboxBoolean() && _value) || isChechboxBoolean()\" type=\"checkbox\"\n        [value]=\"_value\" (change)=\"check(_value)\" [attr.checked]=\"isChecked(_value)? true : null\" />\n    <button id=\"buttoncheckbox\"\n        (click)=\"check(_value);  _value == true && onCheck.emit(); _value == false && unCheck.emit()\"\n        [disabled]=\"isdisabled\">{{ isChechboxBoolean() ? '' : _value[bindLabel]}}<ng-content></ng-content></button>\n</div>\n\n<div id=\"checkbox\" *ngIf=\"switch === 'Default'\">\n    <label class='switch'>\n        <input id=\"inputcheckbox\" *ngIf=\"(!isChechboxBoolean() && _value) || isChechboxBoolean()\" type=\"checkbox\"\n            [value]=\"_value\"\n            (change)=\"check(_value);_value == true && onCheck.emit(); _value == false && unCheck.emit()\"\n            [attr.checked]=\"isChecked(_value)? true : null\" />\n        <span class=\"slider round\" id=\"buttoncheckbox\"></span>\n    </label>\n</div>\n<div id=\"checkbox\" *ngIf=\"switch === 'valid'\">\n    <label class='switch-valid'>\n        <input id=\"inputcheckbox\" *ngIf=\"(!isChechboxBoolean() && _value) || isChechboxBoolean()\" type=\"checkbox\"\n            [value]=\"_value\"\n            (change)=\"check(_value);_value == true && onCheck.emit(); _value == false && unCheck.emit()\"\n            [attr.checked]=\"isChecked(_value)? true : null\" />\n        <span class=\"slider round\" id=\"buttoncheckbox\"></span>\n    </label>\n</div>","export { TitleService } from './title.service';\nexport { TokenService } from './token.service';\nexport { LayoutService } from './layout.service';\nexport { IAMService } from './iam.service';\nexport { ClassService } from './class.servise';\nexport { RoomService } from './room.servise';\nexport { RefService } from './ref.service';\nexport { StudentService } from './student-service';\nexport { TeacherService } from './teacher-service';\nexport { ModuleService } from './module.service';\nexport { ExamService } from './exam.service';","export class UserResponse {\n    public id: string;\n    public username: string;\n    public lastName: string;\n    public firstName: string;\n    public email: string;\n    public createdTimestamp: string;\n    public roles: string[];\n\n    constructor(id: string, lastName: string, firstName: string, email: string, roles: string[]) {\n        this.id = id;\n        this.lastName = lastName;\n        this.firstName = firstName;\n        this.email = email;\n        this.roles = roles;\n    }\n}","export class SideBarMenu {\n    public code: string = \"\";\n    public defaultLabel: string = \"\";\n    public subMenus?: SideBarMenu[] = [];\n    public routerLink?: string[] = [];\n    public icon: string = \"\";\n    public appAuthz: string = \"\";\n}","export enum PeriodEnum {\n    P1 = \"P1\",\n    P2 = \"P2\"\n}","import { NgModule, Optional, SkipSelf, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LayoutService, TitleService, TokenService, IAMService, ClassService, RoomService, RefService, StudentService, \n  TeacherService, ModuleService, ExamService } from './services';\nimport { DatePipe } from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule has already been loaded. Import Core modules in the AppModule only.');\n    }\n  }\n\n  public static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        TitleService,\n        TokenService,\n        LayoutService,\n        RefService,\n        IAMService,\n        ClassService,\n        RoomService,\n        StudentService,\n        TeacherService,\n        ModuleService,\n        ExamService,\n        DatePipe\n      ]\n    };\n  }\n\n}","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ConfigService } from '@ngx-config/core';\nimport { Classs } from '../models';\n\n@Injectable()\nexport class ClassService {\n\n    readonly domain: string;\n\n    constructor(private config: ConfigService,\n        private httpClient: HttpClient) {\n        this.domain = this.config.getSettings('environment.serviceBaseUrl') + \"class/\";\n    }\n\n    addClass(data): Observable<HttpResponse<Classs>> {\n        return this.httpClient.post<Classs>(this.domain, data, { observe: 'response' });\n    }\n\n    updateClass(data): Observable<HttpResponse<Classs>> {\n        return this.httpClient.put<Classs>(this.domain, data, { observe: 'response' });\n    }\n\n    deleteClass(id) {\n        return this.httpClient.delete<void>(this.domain + id);\n    }\n\n    getClasses(): Observable<Classs[]> {\n        return this.httpClient.get<Classs[]>(this.domain);\n    }\n\n    getClassesByModule(moduleId: string): Observable<Classs[]> {\n        return this.httpClient.get<Classs[]>(this.domain + \"moduleId/\" + moduleId);\n    }\n\n    searchClass(data): Observable<Classs[]> {\n        return this.httpClient.post<Classs[]>(this.domain + \"search\", data);\n    }\n\n    getSingleClass(id: string): Observable<Classs> {\n        return this.httpClient.get<Classs>(this.domain + id);\n    }\n\n}","export class UpdateExamRequest {\n    public examId: string;\n    public classId: string;\n    public moduleId: string;\n    public examDate: Date;\n    public examHour: number;\n    public examDuration: number;\n    public dsex: string;\n    public examType: string;\n    public semester: string;\n    public examSession: string;\n    public classRoomId: string;\n    public supervisorId: string;\n\n    constructor(examId: string, classId: string, moduleId: string, examDate: Date, examHour: number, examDuration: number, dsex: string, examType: string,\n        semester: string, examSession: string, classRoomId: string, supervisorId: string) {\n        this.examId = examId;\n        this.classId = classId;\n        this.moduleId = moduleId;\n        this.examDate = examDate;\n        this.examHour = examHour;\n        this.examDuration = examDuration;\n        this.dsex = dsex;\n        this.examType = examType;\n        this.semester = semester;\n        this.examSession = examSession;\n        this.classRoomId = classRoomId;\n        this.supervisorId = supervisorId;\n    }\n}","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'be-footer',\r\n    templateUrl: './footer.component.html'\r\n})\r\nexport class FooterComponent {\r\n\r\n}","<div class=\"row\">\r\n    <div class=\"col-12 text-right\">\r\n        <p>© 2018 be-ys - <a href=\"#\" data-toggle=\"modal\" data-target=\"#MentionsLegales\">Legal notice</a></p>\r\n    </div>\r\n</div>","export class CreateStudentRequest {\n    public userId: string;\n    public cin: string;\n    public classId: string;\n\n    constructor(userId: string, cin: string, classId: string) {\n        this.userId = userId;\n        this.cin = cin;\n        this.classId = classId;\n    }\n}","import { Component, Input, ViewEncapsulation, HostListener, Output, EventEmitter } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    templateUrl: './remove-popup.component.html',\r\n    styleUrls: ['./remove-popup.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class RemovePopupComponent {\r\n\r\n    @Input()\r\n    public config: any;\r\n\r\n    @Output()\r\n    public sendData: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(private activeModal: NgbActiveModal) { }\r\n\r\n    public confirm(): void {\r\n        this.sendData.emit(true);\r\n    }\r\n\r\n    @HostListener('document:keydown.escape', ['$event']) onKeydownHandler(event: KeyboardEvent) {\r\n        this.closeModal();\r\n    }\r\n\r\n    @HostListener('document:keypress', ['$event']) handleKeyboardEvent(event: KeyboardEvent) {\r\n        this.confirm();\r\n    }\r\n\r\n    public closeModal(): void {\r\n        this.activeModal.close();\r\n    }\r\n\r\n}","<div class=\"modal-header mt-3\">\r\n    <h2 class=\"h3 modal-title text-center font-size-24 bold\" style=\"width: 100%;\">{{config?.title}}\r\n    </h2>\r\n    <span class=\"close\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"closeModal()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n    </span>\r\n</div>\r\n<div class=\"modal-body pt-1 pt-2 text-center \">\r\n    <div class=\"row\">\r\n        <div class=\"col-12 py-4\">\r\n            <p class=\"bold font-size-24\">\r\n                <i class=\"icons icon-help color-primary size-32 pr-2\"></i>\r\n                {{config?.message}}\r\n            </p>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <div class=\"form-group\">\r\n        <button type=\"button\" (click)=\"confirm()\" class=\"btn btn-bg-error\">\r\n            Oui\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"closeModal()\">Non</button>\r\n    </div>\r\n</div>","export enum SemesterEnum {\n    S1 = \"S1\",\n    S2 = \"S2\"\n}","import { KeycloakService } from 'keycloak-angular';\nimport { HttpClient } from '@angular/common/http';\n\n\nfunction getPageInfo(http: HttpClient): Promise<any> {\n  return new Promise(async (resolve, reject) => {\n    let infoUrl = window.location.protocol + '//' + window.location.hostname + ':' + window.location.port + '/actuator/info';\n    if (window.location.hostname === 'localhost') {\n      infoUrl = window.location.protocol + '//' + window.location.hostname + ':8997/actuator/info';\n    }\n    http.get<any>(infoUrl).subscribe(list => { resolve(list) });\n  })\n}\n\n\nexport function initializer(keycloak: KeycloakService, http: HttpClient): () => Promise<any> {\n  let configOptions: any;\n  return (): Promise<any> => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        await getPageInfo(http).then(opt => configOptions = opt);\n        await keycloak.init({\n          config: {\n            url: configOptions.environment.keycloak.url,\n            realm: configOptions.environment.keycloak.realm,\n            clientId: configOptions.environment.keycloak.clientId\n          },\n          initOptions: {\n            onLoad: 'login-required'\n          },\n          enableBearerInterceptor: true\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n}","export { SideBarMenu } from './menu.model';\nexport { User } from './user.model';\nexport { Classs } from './class.model';\nexport { Student } from './student.model';\nexport { Room } from './room.modal';\nexport { Department } from './departement.modal';\nexport { Module } from './module.model';\nexport { Bloc } from './bloc.model';\nexport { Exam } from './exam.modal';\nexport { PoleEnum } from './pole.enum';\n\nexport { SemesterEnum } from './semester.enum';\nexport { PeriodEnum } from './period.enum';\nexport { ExamTypeEnum } from './exam-type.enum';\nexport { SessionEnum } from './session.enum';\nexport { DsexEnum } from './dsex.enum';\n\nexport { CreateUserRequest } from './request/create-user-request.model';\nexport { UpdateUserRequest } from './request/update-user-request.model';\nexport { CreateClassRequest } from './request/create-class-request.model';\nexport { UpdateClassRequest } from './request/update-class-request.model';\nexport { CreateRoomRequest } from './request/create-room-request.model';\nexport { UpdateRoomRequest } from './request/update-room-request.model';\nexport { CreateStudentRequest } from './request/create-student-request.model';\nexport { CreateTeacherRequest } from './request/create-teacher-request.model';\nexport { CreateExamRequest } from './request/create-exam-request.modal';\nexport { UpdateExamRequest } from './request/update-exam-request.modal';\n\nexport { UserResponse } from './response/user-response.model';\nexport { SpecificUserResponse } from './response/specific-user-response.model';","export class CreateRoomRequest {\n    public label: string;\n    public capacity: string;\n    public siteId: string;\n    public blocId: string;\n    public startDate: Date;\n    public endDate: Date;\n    public startHour: number;\n    public endHour: number;\n    public reasonId: string;\n\n    constructor(label: string, capacity: string, blocId: string, siteId: string, startDate: string, endDate: string, startHour: string, endHour: string, reasonId: string) {\n        this.label = label;\n        this.capacity = capacity;\n        this.blocId = blocId;\n        this.siteId = siteId;\n        this.startDate = startDate ? new Date(startDate) : null;\n        this.endDate = endDate ? new Date(endDate) : null;\n        this.startHour = startHour ? +startHour.replace(':', '') : null;\n        this.endHour = endHour ? +endHour.replace(':', '') : null;\n        this.reasonId = reasonId;\n    }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class LayoutService {\n\n    public isSideBarDisplay: Boolean = true;\n    public isNavBarDisplay: Boolean = true;\n    public isFullScreen: Boolean = false;\n    private doc = <FullScreenDocument>document;\n    sidebarSubject: BehaviorSubject<boolean>;\n\n    constructor() {\n        this.sidebarSubject = new BehaviorSubject<boolean>(true);\n    }\n\n    public toggleNavBarMenu(): void {\n        this.isNavBarDisplay = !this.isNavBarDisplay;\n    }\n\n    public toggleSideBarDisplay(): void {\n        this.isSideBarDisplay = !this.isSideBarDisplay;\n        const event = new CustomEvent(\"reduce\", { \"detail\": \"reduce sidebar\" });\n        document.dispatchEvent(event);\n    }\n\n    public toggleFullScreen(): void {\n        this.isFullScreen = this.toggle();\n    }\n\n    public showSidedar(show: boolean) {\n        this.sidebarSubject.next(show);\n    }\n\n    public getSidebarState(): Observable<boolean> {\n        return this.sidebarSubject.asObservable();\n    }\n\n    public isDesktop() {\n        return window.innerWidth > 1024;\n    }\n\n    enter() {\n        const el = this.doc.documentElement;\n        if (el.requestFullscreen) el.requestFullscreen();\n        else if (el.msRequestFullscreen) el.msRequestFullscreen();\n        else if (el.mozRequestFullScreen) el.mozRequestFullScreen();\n        else if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n    }\n\n    leave() {\n        if (this.doc.exitFullscreen) this.doc.exitFullscreen();\n        else if (this.doc.msExitFullscreen) this.doc.msExitFullscreen();\n        else if (this.doc.mozCancelFullScreen) this.doc.mozCancelFullScreen();\n        else if (this.doc.webkitExitFullscreen) this.doc.webkitExitFullscreen();\n    }\n\n    toggle(): Boolean {\n        if (this.enabled) { this.leave(); return true; }\n        else { this.enter(); return false; }\n    }\n\n    get enabled() {\n        return !!(\n            this.doc.fullscreenElement ||\n            this.doc.mozFullScreenElement ||\n            this.doc.webkitFullscreenElement ||\n            this.doc.msFullscreenElement\n        );\n    }\n\n}\n\ninterface FullScreenDocument extends HTMLDocument {\n    documentElement: FullScreenDocumentElement;\n    mozFullScreenElement?: Element;\n    msFullscreenElement?: Element;\n    webkitFullscreenElement?: Element;\n    msExitFullscreen?: () => void;\n    mozCancelFullScreen?: () => void;\n    webkitExitFullscreen?: () => void;\n}\n\ninterface FullScreenDocumentElement extends HTMLElement {\n    msRequestFullscreen?: () => void;\n    mozRequestFullScreen?: () => void;\n    webkitRequestFullscreen?: () => void;\n}","export class CreateExamRequest {\n    public classId: string;\n    public moduleId: string;\n    public examDate: Date;\n    public examHour: number;\n    public examDuration: number;\n    public dsex: string;\n    public examType: string;\n    public semester: string;\n    public examSession: string;\n    public classRoomId: string;\n    public supervisorId: string;\n\n    constructor(classId: string, moduleId: string, examDate: Date, examHour: number, examDuration: number, dsex: string, examType: string,\n        semester: string, examSession: string, classRoomId: string, supervisorId: string) {\n        this.classId = classId;\n        this.moduleId = moduleId;\n        this.examDate = examDate;\n        this.examHour = examHour;\n        this.examDuration = examDuration;\n        this.dsex = dsex;\n        this.examType = examType;\n        this.semester = semester;\n        this.examSession = examSession;\n        this.classRoomId = classRoomId;\n        this.supervisorId = supervisorId;\n    }\n}","export enum SessionEnum {\n    PRINCIPAL = \"Principal\",\n    REMEDIAL = \"Rattrapage\"\n}","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ConfigService } from '@ngx-config/core';\nimport { Room } from '../models';\n\n@Injectable()\nexport class RoomService {\n\n    readonly domain: string;\n\n    constructor(private config: ConfigService,\n        private httpClient: HttpClient) {\n        this.domain = this.config.getSettings('environment.serviceBaseUrl') + \"room/\";\n    }\n\n    addRoom(data): Observable<HttpResponse<HttpResponse<Room>>> {\n        return this.httpClient.post<HttpResponse<Room>>(this.domain, data, { observe: 'response' });\n    }\n\n    addDisponibility(data): Observable<any> {\n        return this.httpClient.post<any>(this.domain + \"disponibility\", data, { observe: 'response' });\n    }\n\n    updateRoom(data): Observable<any> {\n        return this.httpClient.put<any>(this.domain, data, { observe: 'response' });\n    }\n\n    updateDisponibility(classRoomId: string, data): Observable<any> {\n        return this.httpClient.post<any>(this.domain + \"disponibility/\" + classRoomId, data, { observe: 'response' });\n    }\n\n    deleteRoom(id) {\n        return this.httpClient.delete<void>(this.domain + id);\n    }\n\n    deleteDisponibility(id) {\n        return this.httpClient.delete<void>(this.domain + \"disponibility/\" + id);\n    }\n\n    getDisponibilitiesByRoom(id): Observable<any> {\n        return this.httpClient.get<any>(this.domain + \"disponibility/\" + id);\n    }\n\n    getRooms(): Observable<Room[]> {\n        return this.httpClient.get<Room[]>(this.domain + \"without-disponibilities\");\n    }\n\n    getSingleRoom(username: string): Observable<Room> {\n        return this.httpClient.get<Room>(this.domain + '/' + username);\n    }\n\n}","export class CreateClassRequest {\n    public label: string;\n    public nbrStudents: string;\n    public nbrGroups: string;\n    public specialityId: string;\n\n    constructor(label: string, nbrStudents: string, nbrGroups: string, specialityId: string) {\n        this.label = label;\n        this.nbrStudents = nbrStudents;\n        this.nbrGroups = nbrGroups;\n        this.specialityId = specialityId;\n    }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}